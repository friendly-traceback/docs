
Friendly SyntaxError tracebacks - in தமிழ் மொழி
==========================================================

Friendly aims to provide friendlier feedback when an exception
is raised than what is done by Python.

This file contains only examples of SyntaxError and its sub-classes.
Some tests may appear to be repetitive to a human reader
but they are may be included to ensure more complete test coverage.

.. note::

     The content of this page is generated by running
     `trb_syntax_tamil.py` located in the ``tests/`` directory.
     This needs to be done explicitly, independently of updating the
     documentation using Sphinx.
     On Windows, if Sphinx is installed on your computer, it is suggested
     instead to run make_trb.bat in the root directory as it will create
     similar files for all languages *and* update the documentation.

Friendly-traceback version: 0.6.0
Python version: 3.9.10



(1) Using 'and' in import statement
-----------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\and_in_import_statement.py", line 1
        from math import sin and cos
                             ^
    SyntaxError: invalid syntax
    
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\and_in_import_statement.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       1| from math import sin and cos
                               ^^^

    பைதான் முக்கியச்சொல் `and` பூலியன் வெளிப்பாடுகளுக்கு மட்டுமே பயன்படுத்தப்படும். 
    ஒருவேளை நீங்கள் பின்வருமாறு எழுத நினைத்திருக்கலாம்
    
    `from math import sin , cos`
    

(2) Using 'and' after comma in import statement
-----------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\and_in_import_statement_2.py", line 1
        from math import sin, tan, and cos
                                   ^
    SyntaxError: invalid syntax
    
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\and_in_import_statement_2.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       1| from math import sin, tan, and cos
                                     ^^^

    பைதான் முக்கியச்சொல் `and` பூலியன் வெளிப்பாடுகளுக்கு மட்டுமே பயன்படுத்தப்படும். 
    ஒருவேளை நீங்கள் பின்வருமாறு எழுத நினைத்திருக்கலாம்
    
    `from math import sin, tan,  cos`
    

(3) Annotated name cannot be global
-----------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\annotated_name_global.py", line 4
        var:int = 1
        ^
    SyntaxError: annotated name 'var' can't be global
    
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\annotated_name_global.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       4|     var:int = 1
              ^^^

    `var` என்ற பெயரிடப்பட்ட பொருள், உள்ளூர் மாறியாக வகை சிறுகுறிப்பு 
    மூலம் வரையறுக்கப்படுகிறது. இது உலகளாவிய மாறி என்று அறிவிக்க முடியாது.
    

(4) Incorrect use of 'from module import ... as ...
---------------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\as_instead_of_comma_in_import.py", line 2
        from math import (sin, cos) as funcs
                                    ^
    SyntaxError: invalid syntax
    
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\as_instead_of_comma_in_import.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       2| from math import (sin, cos) as funcs
                                      ^^

    நீங்கள் தொகுதி `math` இலிருந்து குறைந்தபட்சம் ஒரு பொருளை இறக்குமதி செய்து, பைதான் முக்கிய சொல்லான `as` ஐப் பயன்படுத்தி மறுபெயரிட 
    முயற்சிக்கிறீர்கள் என்று நினைக்கிறேன்; 
    நன்கு வரையறுக்கப்பட்ட தொடரியல் மூலம் ஒரே நேரத்தில் ஒரு பொருளை 
    மறுபெயரிட மட்டுமே இந்த முக்கிய சொல்லைப் பயன்படுத்த முடியும். 
    ஒவ்வொரு பொருளுக்கும் தனித்தனி வரியில் மறுபெயரிடப்பட்ட அத்தகைய 
    இறக்குமதி அறிக்கையைப் பின்வருமாறு பிரிக்குமாறு நான் பரிந்துரைக்கிறேன்: 
    
        from math import பொருள்_1 as பெயர்_1
        from math import பொருள்_2 as பெயர்_2  # ஆக தேவைப்பட்டால்
    

(5) Assign instead of equal (or walrus).
----------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_instead_of_equal.py", line 1
        a = (b = 2)  # issue #65
               ^
    SyntaxError: invalid syntax
    
        ஒருவேளை உங்களுக்கு `=` என்பதற்குப் பதிலாக `==` அல்லது `:=` தேவைப்படலாம்.
        
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_instead_of_equal.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       1| a = (b = 2)  # issue #65
                 ^

    நீங்கள் ஒரு ஒதுக்கல் இயக்கியைப் பயன்படுத்தியுள்ளீர்கள் `=`; ஒருவேளை நீங்கள் 
    சமத்துவ இயக்கி, `==` அல்லது கடற்குதிரை இயக்கி `:=` ஐப் பயன்படுத்த நினைத்திருக்கலாம்.
    

(6) Name assigned prior to global declaration
---------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_name_before_global_1.py", line 7
        global aa, bb, cc, dd
        ^
    SyntaxError: name 'cc' is assigned to before global declaration
    
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_name_before_global_1.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       7|     global aa, bb, cc, dd
              ^^^^^^         ^^

    உலகளாவிய மாறியாக அறிவிக்கும் முன், `cc` மாறிக்கு மதிப்பை 
    ஒதுக்கியுள்ளீர்கள்.
    

(7) Name used prior to global declaration
-----------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_name_before_global_2.py", line 7
        global var
        ^
    SyntaxError: name 'var' is used prior to global declaration
    
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_name_before_global_2.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       7|     global var
              ^^^^^^ ^^^

    உலகளாவிய மாறியாக அறிவிக்கும் முன் 
    `var` மாறியைப் பயன்படுத்தியுள்ளீர்கள்.
    

(8) Name used prior to nonlocal declaration
-------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_name_before_nonlocal_1.py", line 11
        nonlocal pp, qq
        ^
    SyntaxError: name 'qq' is used prior to nonlocal declaration
    
        முதலில் `nonlocal` என்று எழுத மறந்துவிட்டீர்களா?
        
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_name_before_nonlocal_1.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       11|         nonlocal pp, qq
                   ^^^^^^^^     ^^

    நீங்கள் `qq` என்ற மாறியைப் பயன்படுத்தியுள்ளீர்கள், 
    அதை உள்ளூர் அல்லாத மாறியாக அறிவிக்கும் முன்.
    

(9) Name assigned prior to nonlocal declaration
-----------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_name_before_nonlocal_2.py", line 9
        nonlocal s
        ^
    SyntaxError: name 's' is assigned to before nonlocal declaration
    
        `nonlocal` சேர்க்க மறந்துவிட்டீர்களா?
        
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_name_before_nonlocal_2.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       9|         nonlocal s
                  ^^^^^^^^ ^

    நீங்கள் `s` மாறிக்கு ஒரு மதிப்பை ஒதுக்கியுள்ளீர்கள், 
    அதை உள்ளூர் அல்லாத மாறியாக அறிவிக்கும் முன்.
    

(10) Assign to conditional expression
-------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_conditional.py", line 3
        a if 1 else b = 1
        ^
    SyntaxError: cannot assign to conditional expression
    
        அடையாளங்காட்டிகளுக்கு (மாறி பெயர்கள்) மட்டுமே நீங்கள் பொருட்களை ஒதுக்க முடியும்.
        
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_to_conditional.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       3| a if 1 else b = 1
          ^^^^^^^^^^^^^

    On the left-hand side of an equal sign, you have a
    conditional expression instead of the name of a variable.
        a if 1 else b = ...
        ^^^^^^^^^^^^^
    அடையாளங்காட்டிகளுக்கு (மாறி பெயர்கள்) மட்டுமே நீங்கள் பொருட்களை ஒதுக்க முடியும்.
    

(11) Assignment to keyword (__debug__)
--------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_debug.py", line 4
        __debug__ = 1
        ^
    SyntaxError: cannot assign to __debug__
    
        `__debug__`க்கு மதிப்பை ஒதுக்க முடியாது.
        
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_to_debug.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       4| __debug__ = 1
          ^^^^^^^^^

    `__debug__` என்பது பைத்தானில் ஒரு மாறிலி; நீங்கள் வேறு மதிப்பை ஒதுக்க முடியாது.
    

(12) Assignment to keyword (__debug__)
--------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_debug2.py", line 4
        a.__debug__ = 1
        ^
    SyntaxError: cannot assign to __debug__
    
        `__debug__`க்கு மதிப்பை ஒதுக்க முடியாது.
        
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_to_debug2.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       4| a.__debug__ = 1
            ^^^^^^^^^

    `__debug__` என்பது பைத்தானில் ஒரு மாறிலி; நீங்கள் வேறு மதிப்பை ஒதுக்க முடியாது.
    

(13) Assignment to Ellipsis symbol
----------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_ellipsis.py", line 4
        ... = 1
        ^
    SyntaxError: cannot assign to Ellipsis
    
        நீள்வட்டச் சின்னத்திற்கு [`...`] மதிப்பை நீங்கள் ஒதுக்க முடியாது.
        
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_to_ellipsis.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       4| ... = 1
          ^^^

    நீள்வட்டச் சின்னம் `...` என்பது பைத்தானில் ஒரு மாறிலி; அதற்கு வேறு மதிப்பை நீங்கள் ஒதுக்க முடியாது.
    

(14) Cannot assign to f-string
------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_f_string.py", line 6
        f'{x}' = 42
        ^
    SyntaxError: cannot assign to f-string expression
    
        அடையாளங்காட்டிகளுக்கு (மாறி பெயர்கள்) மட்டுமே நீங்கள் பொருட்களை ஒதுக்க முடியும்.
        
    பைத்தானால் உங்கள் குறியீட்டைப் புரிந்து கொள்ள முடியாதபோது தொடரியல்பிழை `SyntaxError` ஏற்படுகிறது.
    
    'TESTS:\syntax\assign_to_f_string.py' 
    கோப்பில் உள்ள குறியீட்டைப் பைத்தானால் புரிந்து கொள்ள முடியவில்லை
    சுட்டிக்காட்டப்பட்ட இடத்தில்.
    
       6| f'{x}' = 42
          ^^^^^^

    சம அடையாளத்தின் இடது புறத்தில் f-சரம் `f'{x}'` கொண்ட ஒரு 
    வெளிப்பாட்டை நீங்கள் எழுதியுள்ளீர்கள். 
    ஒரு f-சரம் ஒரு சம அடையாளத்தின் வலது பக்கத்தில் மட்டுமே தோன்றும்.
    அடையாளங்காட்டிகளுக்கு (மாறி பெயர்கள்) மட்டுமே நீங்கள் பொருட்களை ஒதுக்க முடியும்.
    

(15) Cannot assign to function call: single = sign
--------------------------------------------------

.. code-block:: none

