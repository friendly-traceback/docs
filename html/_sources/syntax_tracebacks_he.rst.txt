
Friendly SyntaxError tracebacks - בעברית
=============================================

Friendly שואפת לספק משוב ידידותי יותר כאשר מדובר בחריג
מוגדל ממה שנעשה על ידי Python.
(sentence translated by Google Translate).

This file contains only examples of SyntaxError and its sub-classes.
Some tests may appear to be repetitive to a human reader
but they are may be included to ensure more complete test coverage.

.. note::

     The content of this page is generated by running
     `trb_syntax_hebrew.py` located in the ``tests/`` directory.
     This needs to be done explicitly, independently of updating the
     documentation using Sphinx.
     On Windows, if Sphinx is installed on your computer, it is suggested
     instead to run make_trb.bat in the root directory as it will create
     similar files for all languages *and* update the documentation.

Friendly-traceback version: 0.5.18
Python version: 3.9.10



(1) Using 'and' in import statement
-----------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\and_in_import_statement.py", line 1
        from math import sin and cos
                             ^
    SyntaxError: invalid syntax
    
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\and_in_import_statement.py'
    at the location indicated.
    
       1: from math import sin and cos
                               ^^^

    The Python keyword `and` can only be used for boolean expressions.
    Perhaps you meant to write
    
    `from math import sin , cos`
    

(2) Using 'and' after comma in import statement
-----------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\and_in_import_statement_2.py", line 1
        from math import sin, tan, and cos
                                   ^
    SyntaxError: invalid syntax
    
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\and_in_import_statement_2.py'
    at the location indicated.
    
       1: from math import sin, tan, and cos
                                     ^^^

    The Python keyword `and` can only be used for boolean expressions.
    Perhaps you meant to write
    
    `from math import sin, tan,  cos`
    

(3) Annotated name cannot be global
-----------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\annotated_name_global.py", line 4
        var:int = 1
        ^
    SyntaxError: annotated name 'var' can't be global
    
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\annotated_name_global.py'
    at the location indicated.
    
       4:     var:int = 1
              ^^^

    האובייקט בשם 'var' מוגדר עם ביאור סוג
    כמשתנה מקומי. לא ניתן להכריז עליו כמשתנה עולמי.
    

(4) Incorrect use of 'from module import ... as ...
---------------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\as_instead_of_comma_in_import.py", line 2
        from math import (sin, cos) as funcs
                                    ^
    SyntaxError: invalid syntax
    
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\as_instead_of_comma_in_import.py'
    at the location indicated.
    
       2: from math import (sin, cos) as funcs
                                      ^^

    I am guessing that you are trying to import at least one object
    from module `math` and rename it using the Python keyword `as`;
    this keyword can only be used to rename one object at a time
    using a well defined syntax.
    I suggest that you split up any such import statement with each object
    renamed on a separate line as follows:
    
        from math import object_1 as name_1
        from math import object_2 as name_2  # if needed
    

(5) Assign instead of equal (or walrus).
----------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_instead_of_equal.py", line 1
        a = (b = 2)  # issue #65
               ^
    SyntaxError: invalid syntax
    
        אולי היית צריך '==' או ': =' במקום '='.
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_instead_of_equal.py'
    at the location indicated.
    
       1: a = (b = 2)  # issue #65
                 ^

    השתמשת באופרטור מקוצר  `=`; אולי התכוונת להשתמש
    במפעיל שוויון, `==`, או במפעיל ישיר `: =`.
    

(6) Name assigned prior to global declaration
---------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_name_before_global_1.py", line 7
        global aa, bb, cc, dd
        ^
    SyntaxError: name 'cc' is assigned to before global declaration
    
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_name_before_global_1.py'
    at the location indicated.
    
       7:     global aa, bb, cc, dd
              ------         ^^

    הקצית ערך למשתנה 'cc'
    לפני הכרזתו כמשתנה גלובלי.
    

(7) Name used prior to global declaration
-----------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_name_before_global_2.py", line 7
        global var
        ^
    SyntaxError: name 'var' is used prior to global declaration
    
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_name_before_global_2.py'
    .
    
       7:     global var
              ------ ^^^

    השתמשת במשתנה 'var'
    לפני הכרזתו כמשתנה גלובלי.
    

(8) Name used prior to nonlocal declaration
-------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_name_before_nonlocal_1.py", line 11
        nonlocal pp, qq
        ^
    SyntaxError: name 'qq' is used prior to nonlocal declaration
    
        האם שכחת לכתוב 'nonlocal' קודם?
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_name_before_nonlocal_1.py'
    at the location indicated.
    
       11:         nonlocal pp, qq
                   --------     ^^

    השתמשת במשתנה 'qq'
    לפני הכרזתו כמשתנה לא -מקומי. (nonlocal )
    

(9) Name assigned prior to nonlocal declaration
-----------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_name_before_nonlocal_2.py", line 9
        nonlocal s
        ^
    SyntaxError: name 's' is assigned to before nonlocal declaration
    
        שכחת להוסיף `nonlocal`?
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_name_before_nonlocal_2.py'
    .
    
       9:         nonlocal s
                  -------- ^

    הקצית ערך למשתנה 's'
    לפני הכרזתו כמשתנה לא -מקומי (nonlocal).
    

(10) Assign to conditional expression
-------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_conditional.py", line 3
        a if 1 else b = 1
        ^
    SyntaxError: cannot assign to conditional expression
    
        ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_conditional.py'
    at the location indicated.
    
       3: a if 1 else b = 1
          ^^^^^^^^^^^^^

    בצד שמאל של סימן שוויון, יש לך א
    ביטוי מותנה במקום שם של משתנה.
        a if 1 else b = ...
        ^^^^^^^^^^^^^
    ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
    

(11) Assignment to keyword (__debug__)
--------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_debug.py", line 4
        __debug__ = 1
        ^
    SyntaxError: cannot assign to __debug__
    
        You cannot assign a value to `__debug__`.
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_debug.py'
    at the location indicated.
    
       4: __debug__ = 1
          ^^^^^^^^^

    `__debug__` הוא קבוע בפיתון; אינך יכול להקצות לו ערך אחר.
    

(12) Assignment to keyword (__debug__)
--------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_debug2.py", line 4
        a.__debug__ = 1
        ^
    SyntaxError: cannot assign to __debug__
    
        You cannot assign a value to `__debug__`.
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_debug2.py'
    at the location indicated.
    
       4: a.__debug__ = 1
            ^^^^^^^^^

    `__debug__` הוא קבוע בפיתון; אינך יכול להקצות לו ערך אחר.
    

(13) Assignment to Ellipsis symbol
----------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_ellipsis.py", line 4
        ... = 1
        ^
    SyntaxError: cannot assign to Ellipsis
    
        לא ניתן להקצות ערך לסמל האליפסיס (ellipsis) ['...'].
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_ellipsis.py'
    at the location indicated.
    
       4: ... = 1
          ^^^

    סמל האליפסיס (ellipsis ) '...' הוא קבוע בפייתון; אינך יכול\ה להקצות לו ערך אחר.
    

(14) Cannot assign to f-string
------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_f_string.py", line 6
        f'{x}' = 42
        ^
    SyntaxError: cannot assign to f-string expression
    
        ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_f_string.py'
    at the location indicated.
    
       6: f'{x}' = 42
          ^^^^^^

    כתבת ביטוי המכיל את מחרוזת f 'f'{x}''
    בצד שמאל של סימן השוויון.
    מחרוזת f צריכה להופיע רק בצד ימין של סימן שווה.
    ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
    

(15) Cannot assign to function call: single = sign
--------------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_function_call_1.py", line 6
        len('a') = 3
        ^
    SyntaxError: cannot assign to function call
    
        ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_function_call_1.py'
    at the location indicated.
    
       6: len('a') = 3
          ^^^^^^^^

    You wrote the expression
    
        len('a') = ...
        ^^^^^^^^
    where `len('a')`, on the left-hand side of the equal sign, either is
    or includes a function call and is not simply the name of a variable.
    ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
    

(16) Cannot assign to function call: two = signs
------------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_function_call_2.py", line 6
        func(a, b=3) = 4
        ^
    SyntaxError: cannot assign to function call
    
        ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_function_call_2.py'
    at the location indicated.
    
       6: func(a, b=3) = 4
          ^^^^^^^^^^^^

    You wrote the expression
    
        func(a, b=3) = ...
        ^^^^^^^^^^^^
    where `func(a, b=3)`, on the left-hand side of the equal sign, either is
    or includes a function call and is not simply the name of a variable.
    ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
    

(17) Cannot assign to function call: continues on second line
-------------------------------------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_function_call_3.py", line 6
        a = f(1, 2,  # this is a comment
            ^
    SyntaxError: cannot assign to function call
    
        ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_function_call_3.py'
    at the location indicated.
    
    -->6: a = f(1, 2,  # this is a comment
              ^^^^^^^-->
       7:       3, 4) = 5

    You wrote the expression
    
        f(1, 2,...) = ...
        ^^^^^^^-->
    where `f(1, 2,...)`, on the left-hand side of the equal sign, either is
    or includes a function call and is not simply the name of a variable.
    ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
    

(18) Assign to generator expression
-----------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_generator.py", line 3
        (x for x in x) = 1
        ^
    SyntaxError: cannot assign to generator expression
    
        ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_generator.py'
    at the location indicated.
    
       3: (x for x in x) = 1
          ^^^^^^^^^^^^^^

    בצד שמאל של סימן שוויון, יש לך
    ביטוי גנרטור במקום שם של משתנה.
    ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
    

(19) Cannot assign to literal - 4
---------------------------------

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\trb_syntax_common.py", line 49, in create_tracebacks
        __import__(name)
      File "TESTS:\syntax\assign_to_literal_dict.py", line 7
        {1 : 2, 2 : 4} = 5
        ^
    SyntaxError: cannot assign to dict display
    
        ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
        
    'SyntaxError' נזרק כאשר פייתון אינו מצליח להבין את הקוד שלך.
    
    פייתון לא הצליח להבין את הקוד בקובץ
     'TESTS:\syntax\assign_to_literal_dict.py'
    at the location indicated.
    
       7: {1 : 2, 2 : 4} = 5
          ^^^^^^^^^^^^^^

    כתבת ביטוי כמו
    
         {1 : 2, 2 : 4} = 5
    כאשר '{1 : 2, 2 : 4}', בצד שמאל של סימן השווה,
    הוא או כולל אובייקט בפועל מסוג dict (מילון)
    וזה לא רק שמו של משתנה.
    
    ניתן להקצות אובייקטים רק למזהים (שמות משתנים).
    

(20) Cannot assign to literal int
---------------------------------

.. code-block:: none

