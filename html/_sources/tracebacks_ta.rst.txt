
Friendly tracebacks - in தமிழ் மொழி
==================================================

Friendly aims to provide friendlier feedback when an exception
is raised than what is done by Python.

Below, we can find some examples. SyntaxError cases, as well as TabError and
IndentationError cases, are shown in a separate page.
Not all cases handled by friendly are included here.

.. note::

     The content of this page is generated by running
     `trb_tamil.py` located in the ``tests/`` directory.
     This needs to be done explicitly, independently of updating the
     documentation using Sphinx.

Friendly-traceback version: 0.7.53
Python version: 3.10.6



ArithmeticError
---------------


Generic
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_arithmetic_error.py", line 9, in test_Generic
        raise ArithmeticError('error')
    ArithmeticError: error
    
    `ArithmeticError` is the base class for those built-in exceptions
    that are raised for various arithmetic errors.
    
    'TESTS:\runtime\test_arithmetic_error.py' கோப்பின் `9` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
        4| def test_Generic():
        5|     try:
        6|         # I am not aware of any way in which this error is raised directly
        7|         # Usually, a subclass such as ZeroDivisionError, etc., would
        8|         # likely be raised.
    --> 9|         raise ArithmeticError('error')
       10|     except ArithmeticError as e:

            ArithmeticError:  <class ArithmeticError>
        


AssertionError
--------------


Generic
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_assertion_error.py", line 8, in test_Generic
        raise AssertionError("Fake message")
    AssertionError: Fake message
    
    பைத்தானில், நிபந்தனை `condition` என்பது தவறு `False` அல்ல, 
    அல்லது வெற்றுப் பட்டியல் போன்ற தவறு `False` என்பதற்குச் சமமானதாக இல்லை என்பதை உறுதிப்படுத்த, உறுதிப்படுத்துதல் `assert` என்ற முக்கிய சொல் 
    உறுதிப்படுத்தல் நிபந்தனை `assert condition` படிவத்தின் அறிக்கைகளில் பயன்படுத்தப்படுகிறது.
    
    நிபந்தனை `condition` என்பது தவறு `False` அல்லது அதற்கு சமமானதாக இருந்தால், உறுதிப்படுத்தல்பிழை `AssertionError` எழுப்பப்படும்.
    
    'TESTS:\runtime\test_assertion_error.py' கோப்பின் `8` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       4| def test_Generic():
       5|     try:
       6|         # We raise it explicitly, rather than with the keyword assert, since
       7|         # we don't want pytest to rewrite out test.
    -->8|         raise AssertionError("Fake message")
       9|     except AssertionError as e:

            AssertionError:  <class AssertionError>
        


AttributeError
--------------


Attribute from other module
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 336, in test_Attribute_from_other_module
        keyword.pi
    AttributeError: module 'keyword' has no attribute 'pi'
    
        பின்வரும் தொகுதிக்கூறுகளில் ஒன்றைக் குறிப்பிடுகிறீர்களா: `math, cmath`?
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    தொகுதிக்கு பதிலாக `keyword`, ஒருவேளை நீங்கள் பயன்படுத்த வேண்டும்
    பின்வரும் தொகுதிகளில் ஒன்றின் பண்பு `pi`:
    `math, cmath`.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `336` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       332|     assert "Did you mean `math`?" in result
       333| 
       334| import cmath
       335| try:
    -->336|     keyword.pi
                ^^^^^^^^^^
       337| except AttributeError as e:

            keyword:  <module keyword> from PYTHON_LIB:\keyword.py
        


Builtin function
~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 229, in test_Builtin_function
        len.text
    AttributeError: 'builtin_function_or_method' object has no attribute 'text'
    
        `len(text)` எனக் குறிப்பிடுகிறீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `len` என்பது ஒரு செயல்பாடு. ஒருவேளை நீங்கள் 
    `len(text)` என்று எழுத நினைத்திருக்கலாம்
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `229` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       226| def test_Builtin_function():
       227|     text = 'Hello world!'
       228|     try:
    -->229|         len.text
                    ^^^^^^^^
       230|     except AttributeError as e:

            text:  'Hello world!'
            len:  <builtin function len>
        


Builtin module with no file
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 247, in test_Builtin_module_with_no_file
        sys.foo
    AttributeError: module 'sys' has no attribute 'foo'
    
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `foo` என்ற பெயரில் எந்தப் பொருளும் `sys` தொகுதியில்
    காணப்படவில்லை என்று பைதான் நமக்குச் சொல்கிறது.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `247` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       243| """Issue 116"""
       244| import sys
       245| 
       246| try:
    -->247|     sys.foo
                ^^^^^^^
       248| except AttributeError as e:

            sys:  <module sys (builtin)>
        


Circular import
~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 368, in test_Circular_import
        import my_turtle1
      File "TESTS:\my_turtle1.py", line 4, in <module>
        a = my_turtle1.something
    AttributeError: partially initialized module 'my_turtle1' has no attribute 'something' (most likely due to a circular import)
    
        உங்கள் நிரலுக்கு பைதான் தொகுதிக்கு அதே பெயரைக் கொடுத்தீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    உங்கள் நிரலுக்கு `my_turtle1.py` என்ற பெயரைப் பயன்படுத்தியுள்ளீர்கள் என்றும்,
    அதே பெயரில் பைத்தானின் நிலையான நூலகத்திலிருந்து ஒரு தொகுதியை
    இறக்குமதி செய்ய விரும்புவதாகவும் சந்தேகிக்கிறேன்.
    அப்படியானால், உங்கள் நிரலுக்கு வேறு பெயரைப் பயன்படுத்த வேண்டும்.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `368` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       365| from friendly_traceback.runtime_errors import stdlib_modules
       366| stdlib_modules.names.add("my_turtle1")
       367| try:
    -->368|    import my_turtle1
       369| except AttributeError as e:

    'TESTS:\my_turtle1.py' கோப்பின் `4` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       1| """To test attribute error of partially initialized module."""
       2| import my_turtle1
       3| 
    -->4| a = my_turtle1.something
              ^^^^^^^^^^^^^^^^^^^^

            my_turtle1:  <module my_turtle1> from TESTS:\my_turtle1.py
        


Circular import b
~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 386, in test_Circular_import_b
        import circular_c
      File "TESTS:\circular_c.py", line 4, in <module>
        a = circular_c.something
    AttributeError: partially initialized module 'circular_c' has no attribute 'something' (most likely due to a circular import)
    
        உங்களிடம் ஒரு வட்ட இறக்குமதி உள்ளது.
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `{module}` தொகுதி முழுமையாக இறக்குமதி செய்யப்படவில்லை என்று பைதான் சுட்டிக்காட்டியது.
    தொகுதி `circular_c` இல் குறியீட்டை செயல்படுத்தும் போது, 
    அதே தொகுதியை மீண்டும் இறக்குமதி செய்ய முயற்சித்தால் இது நிகழலாம்.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `386` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       384| def test_Circular_import_b():
       385|     try:
    -->386|         import circular_c
       387|     except AttributeError as e:

    'TESTS:\circular_c.py' கோப்பின் `4` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       1| # Attribute error for partially initialize module
       2| import circular_c
       3| 
    -->4| a = circular_c.something
              ^^^^^^^^^^^^^^^^^^^^

            circular_c:  <module circular_c> from TESTS:\circular_c.py
        


Generic
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 26, in test_Generic
        A.x  # testing type
    AttributeError: type object 'A' has no attribute 'x'
    
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `A` பொருளில் `x` என்ற பண்புக்கூறு இல்லை.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `26` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       22| class A:
       23|     pass
       24| 
       25| try:
    -->26|     A.x  # testing type
               ^^^
       27| except AttributeError as e:

            A:  <class A> defined in <function test_attribute_error.test_Generic>
        


Generic different frame
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 50, in test_Generic_different_frame
        a.attr
    AttributeError: 'A' object has no attribute 'attr'. Did you mean: 'attr2'?
    
        `attr2` எனக் குறிப்பிடுகிறீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `a` என்ற பொருளுக்கு `attr` என்ற பண்புக்கூறு இல்லை.
    நீங்கள் `a.attr` என்பதற்குப் பதிலாக `a.attr2` என்று எழுத நினைத்திருக்கலாம்
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `50` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       46|     return A()
       47| 
       48| a = f()
       49| try:
    -->50|     a.attr
               ^^^^^^
       51| except AttributeError as e:

            a:  <A object>
                defined in <function test_attribute_error.test_Generic_different_frame.<locals>.f>
        


Generic instance
~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 69, in test_Generic_instance
        a.x
    AttributeError: 'A' object has no attribute 'x'
    
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `a` பொருளில் `x` என்ற பண்புக்கூறு இல்லை.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `69` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       66|     pass
       67| a = A()
       68| try:
    -->69|     a.x
               ^^^
       70| except AttributeError as e:

            a:  <A object>
                defined in <function test_attribute_error.test_Generic_instance>
        


Module attribute typo
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 150, in test_Module_attribute_typo
        math.cost
    AttributeError: module 'math' has no attribute 'cost'. Did you mean: 'cos'?
    
        `cos` எனக் குறிப்பிடுகிறீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `math.cost` என்று எழுதுவதற்குப் பதிலாக, அதில் ஒன்றை எழுத நினைத்திருக்கலாம்
    பின்வரும் பெயர்கள் தொகுதியின் பண்புக்கூறுகள் `math`:
    `cos, cosh`
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `150` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       145|     assert "Did you mean `ascii_lowercase`" in result
       146| 
       147| import math
       148| 
       149| try:
    -->150|     math.cost
                ^^^^^^^^^
       151| except AttributeError as e:

            math:  <module math (builtin)>
        


Nonetype
~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 191, in test_Nonetype
        a.b
    AttributeError: 'NoneType' object has no attribute 'b'
    
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    நீங்கள் `b` என்ற பண்புக்கூறை அணுக முயற்சிக்கிறீர்கள், 
    அதன் மதிப்பு `None`.
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `191` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       188| def test_Nonetype():
       189|     a = None
       190|     try:
    -->191|         a.b
                    ^^^
       192|     except AttributeError as e:

            a:  None
        


Object attribute typo
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 86, in test_Object_attribute_typo
        a.appendh(4)
    AttributeError: 'list' object has no attribute 'appendh'. Did you mean: 'append'?
    
        `append` எனக் குறிப்பிடுகிறீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `a` என்ற பொருளுக்கு `appendh` என்ற பண்புக்கூறு இல்லை.
    நீங்கள் `a.appendh` என்பதற்குப் பதிலாக `a.append` என்று எழுத நினைத்திருக்கலாம்
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `86` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       82| def test_Object_attribute_typo():
       83|     #
       84|     try:
       85|         a = [1, 2, 3]
    -->86|         a.appendh(4)
                   ^^^^^^^^^
       87|     except AttributeError as e:

            a:  [1, 2, 3]
        


Perhaps comma
~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 213, in test_Perhaps_comma
        .defg]
    AttributeError: 'str' object has no attribute 'defg'
    
        பொருளின் பெயர்களை காற்புள்ளியால் பிரிக்க வேண்டுமா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `defg` என்பது `abcd` இன் பண்புக்கூறு அல்ல.
    இருப்பினும், `abcd` மற்றும் `defg` இரண்டும் அறியப்பட்ட பொருள்கள்.
    காற்புள்ளியைப் பயன்படுத்துவதற்குப் பதிலாக, இந்த இரண்டு பொருட்களையும் 
    பிரிக்க நீங்கள் ஒரு நிறுத்தற்குறியை எழுதியிருக்கலாம்.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `213` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       208| defg = "world"
       209| 
       210| # fmt: off
       211| try:
       212|     a = [abcd
                     ^^^^
    -->213|     .defg]
                ^^^^^
       214| # fmt: on

            abcd:  'hello'
            defg:  'world'
        


Read only
~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 289, in test_Read_only
        f.b = 1
    AttributeError: 'F' object attribute 'b' is read-only
    
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    எந்தப் பண்புக்கூறுகளை மாற்றலாம் என்பதைக் குறிப்பிட `f` பொருள் `__slots__` ஐப் பயன்படுத்துகிறது.
    பண்புக்கூறின் மதிப்பை `f.b` மாற்ற முடியாது.
    The only attribute of `f` whose value can be changed is`a`.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `289` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       285|     b = 2
       286| 
       287| f = F()
       288| try:
    -->289|     f.b = 1
                ^^^
       290| except AttributeError as e:

            f:  <F object>
                defined in <function test_attribute_error.test_Read_only>
            f.b:  2
        


Shadow stdlib module
~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 172, in test_Shadow_stdlib_module
        turtle.Pen
    AttributeError: module 'turtle' has no attribute 'Pen'
    
        உங்கள் நிரலுக்கு பைதான் தொகுதிக்கு அதே பெயரைக் கொடுத்தீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `TESTS:\turtle.py` இலிருந்து `turtle` என்ற தொகுதியை இறக்குமதி செய்துள்ளீர்கள்.
    பைத்தானின் நிலையான நூலகத்தில் `turtle` என்ற பெயருடைய ஒரு தொகுதியும் உள்ளது.
    ஒருவேளை நீங்கள் உங்கள் தொகுதிக்கு மறுபெயரிட வேண்டும்.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `172` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       168| def test_Shadow_stdlib_module():
       169|     import turtle
       170| 
       171|     try:
    -->172|         turtle.Pen
                    ^^^^^^^^^^
       173|     except AttributeError as e:

            turtle:  <module turtle> from TESTS:\turtle.py
        


Tuple by accident
~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 305, in test_Tuple_by_accident
        something.upper()
    AttributeError: 'tuple' object has no attribute 'upper'
    
        தவறுதலாக காற்புள்ளியை எழுதினீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `something` என்பது `'upper'` பண்புக்கூறாகக் கொண்ட ஒற்றை 
    உருப்படியைக் கொண்ட மடங்கு ஆகும். 
    நீங்கள் `something` வரையறுத்த வரியின் முடிவில் தவறுதலாக 
    பின்னிணைந்த காற்புள்ளியைச் சேர்த்திருக்கலாம்.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `305` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       302| def test_Tuple_by_accident():
       303|     something = "abc",  # note trailing comma
       304|     try:
    -->305|         something.upper()
                    ^^^^^^^^^^^^^^^
       306|     except AttributeError as e:

            something:  ('abc',)
        


Use builtin
~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 103, in test_Use_builtin
        a.length()
    AttributeError: 'list' object has no attribute 'length'
    
        `len(a)` எனக் குறிப்பிடுகிறீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `a` என்ற பொருளுக்கு `length` என்ற பண்புக்கூறு இல்லை.
    அதற்குப் பதிலாக `len` என்ற பைதான் உள்ளமைக்கப்பட்ட செயல்பாட்டைப் பயன்படுத்தலாம்:
    `len(a)`.
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `103` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
        99| def test_Use_builtin():
       100|     #
       101|     try:
       102|         a = [1, 2, 3]
    -->103|         a.length()
                    ^^^^^^^^
       104|     except AttributeError as e:

            a:  [1, 2, 3]
        


Use join with str
~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 351, in test_Use_join_with_str
        a = ['a', '2'].join('abc') + ['b', '3'].join('\n')
    AttributeError: 'list' object has no attribute 'join'
    
        `'abc'.join(['a', '2'])` எனக் குறிப்பிடுகிறீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `['a', '2']` பொருளில் `join` என்ற பண்புக்கூறு இல்லை.
    `'abc'.join(['a', '2'])` போன்ற ஏதாவது ஒன்றை நீங்கள் விரும்பலாம்.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `351` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       349| def test_Use_join_with_str():
       350|     try:
    -->351|         a = ['a', '2'].join('abc') + ['b', '3'].join('\n')
                        ^^^^^^^^^^^^^^^
       352|     except AttributeError as e:


Use synonym
~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 120, in test_Use_synonym
        a.add(4)
    AttributeError: 'list' object has no attribute 'add'
    
        `append` எனக் குறிப்பிடுகிறீர்களா?
        
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `a` என்ற பொருளுக்கு `add` என்ற பண்புக்கூறு இல்லை.
    இருப்பினும், `a` பின்வரும் பண்புக்கூறுகளை ஒத்த பொருள்களைக் கொண்டுள்ளது:
    `append, extend, insert`.
    
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `120` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       116| def test_Use_synonym():
       117|     #
       118|     try:
       119|         a = [1, 2, 3]
    -->120|         a.add(4)
                    ^^^^^
       121|     except AttributeError as e:

            a:  [1, 2, 3]
        


Using slots
~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_attribute_error.py", line 268, in test_Using_slots
        f.b = 1
    AttributeError: 'F' object has no attribute 'b'
    
    பின்வரும் குறியீடு போல ஏதாவது இருந்தால் பண்புப்பிழை `AttributeError` ஏற்படுகிறது
        `object.x`
    மேலும் `x` என்பது `object`க்கு சொந்தமான ஒரு முறை அல்லது பண்புக்கூறு (மாறி) அல்ல.
    
    `f` பொருளில் `b` என்ற பண்புக்கூறு இல்லை.
    `f` பொருள் `__slots__` ஐப் பயன்படுத்துகிறது, இது புதிய 
    பண்புக்கூறுகளை உருவாக்குவதைத் தடுக்கிறது.
    அதன் அறியப்பட்ட சில பண்புக்கூறுகள் பின்வருமாறு:
    `a`.
    'TESTS:\runtime\test_attribute_error.py' கோப்பின் `268` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       264|     __slots__ = ["a"]
       265| 
       266| f = F()
       267| try:
    -->268|     f.b = 1
                ^^^
       269| except AttributeError as e:

            f:  <F object>
                defined in <function test_attribute_error.test_Using_slots>
        


FileNotFoundError
-----------------


Directory not found
~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_file_not_found_error.py", line 73, in test_Directory_not_found
        open("does_not_exist/file.txt")
    FileNotFoundError: [Errno 2] No such file or directory: 'does_not_exist/file.txt'
    
    கோப்புகிடைக்கவில்லைபிழை `FileNotFoundError` விதிவிலக்கு நீங்கள் பைத்தானால் கண்டுபிடிக்க முடியாத 
    கோப்பைத் திறக்க முயற்சி செய்கிறார்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் கோப்பின் பெயரை தவறாக எழுதியதால்  இது நிகழலாம்.
    
    உங்கள் நிரலில், கண்டறிய முடியாத 
    கோப்பின் பெயர் `file.txt`.
    does_not_exist
    செல்லுபடியாகும் கோப்பகம் அல்ல.
    
    'TESTS:\runtime\test_file_not_found_error.py' கோப்பின் `73` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       71| def test_Directory_not_found():
       72|     try:
    -->73|         open("does_not_exist/file.txt")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       74|     except FileNotFoundError as e:

            open:  <builtin function open>
        


Filename not found
~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_file_not_found_error.py", line 7, in test_Filename_not_found
        open("does_not_exist")
    FileNotFoundError: [Errno 2] No such file or directory: 'does_not_exist'
    
    கோப்புகிடைக்கவில்லைபிழை `FileNotFoundError` விதிவிலக்கு நீங்கள் பைத்தானால் கண்டுபிடிக்க முடியாத 
    கோப்பைத் திறக்க முயற்சி செய்கிறார்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் கோப்பின் பெயரை தவறாக எழுதியதால்  இது நிகழலாம்.
    
    உங்கள் நிரலில், கண்டறிய முடியாத 
    கோப்பின் பெயர் `does_not_exist`.
    இது `C:\Users\Andre\github\friendly-traceback\tests` கோப்பகத்தில் காணப்படும் 
    என்று எதிர்பார்க்கப்பட்டது.
    உங்களுக்கான கூடுதல் தகவல் எதுவும் என்னிடம் இல்லை.
    
    'TESTS:\runtime\test_file_not_found_error.py' கோப்பின் `7` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       5| def test_Filename_not_found():
       6|     try:
    -->7|         open("does_not_exist")
                  ^^^^^^^^^^^^^^^^^^^^^^
       8|     except FileNotFoundError as e:

            open:  <builtin function open>
        


Filename not found 2
~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_file_not_found_error.py", line 31, in test_Filename_not_found_2
        open("setupp.py")
    FileNotFoundError: [Errno 2] No such file or directory: 'setupp.py'
    
        `setup.py` என்று நீங்கள் கூறுகிறீர்களா?
        
    கோப்புகிடைக்கவில்லைபிழை `FileNotFoundError` விதிவிலக்கு நீங்கள் பைத்தானால் கண்டுபிடிக்க முடியாத 
    கோப்பைத் திறக்க முயற்சி செய்கிறார்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் கோப்பின் பெயரை தவறாக எழுதியதால்  இது நிகழலாம்.
    
    உங்கள் நிரலில், கண்டறிய முடியாத 
    கோப்பின் பெயர் `setupp.py`.
    இது `C:\Users\Andre\github\friendly-traceback` கோப்பகத்தில் காணப்படும் 
    என்று எதிர்பார்க்கப்பட்டது.
    கோப்பு `setup.py` இதே பெயரைக் கொண்டுள்ளது.
    
    'TESTS:\runtime\test_file_not_found_error.py' கோப்பின் `31` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       27| if chdir:
       28|     os.chdir("..")
       29| 
       30| try:
    -->31|     open("setupp.py")
               ^^^^^^^^^^^^^^^^^
       32| except FileNotFoundError as e:

            open:  <builtin function open>
        


Filename not found 3
~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_file_not_found_error.py", line 54, in test_Filename_not_found_3
        open("setup.pyg")
    FileNotFoundError: [Errno 2] No such file or directory: 'setup.pyg'
    
        `setup.py` என்று நீங்கள் கூறுகிறீர்களா?
        
    கோப்புகிடைக்கவில்லைபிழை `FileNotFoundError` விதிவிலக்கு நீங்கள் பைத்தானால் கண்டுபிடிக்க முடியாத 
    கோப்பைத் திறக்க முயற்சி செய்கிறார்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் கோப்பின் பெயரை தவறாக எழுதியதால்  இது நிகழலாம்.
    
    உங்கள் நிரலில், கண்டறிய முடியாத 
    கோப்பின் பெயர் `setup.pyg`.
    இது `C:\Users\Andre\github\friendly-traceback` கோப்பகத்தில் காணப்படும் 
    என்று எதிர்பார்க்கப்பட்டது.
    இதே பெயர்களைக் கொண்ட பின்வரும் கோப்புகளில் ஒன்றை நீங்கள் குறிப்பிடலாம்:
    `setup.py`, `setup.cfg`
    
    'TESTS:\runtime\test_file_not_found_error.py' கோப்பின் `54` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       51| if chdir:
       52|     os.chdir("..")
       53| try:
    -->54|     open("setup.pyg")
               ^^^^^^^^^^^^^^^^^
       55| except FileNotFoundError as e:

            open:  <builtin function open>
        


ImportError
-----------


Simple import error
~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_import_error.py", line 56, in test_Simple_import_error
        from math import Pi
    ImportError: cannot import name 'Pi' from 'math' (unknown location)
    
        `pi` எனக் குறிப்பிடுகிறீர்களா?
        
    ஒரு குறிப்பிட்ட பொருளை ஒரு தொகுதி அல்லது தொகுப்பிலிருந்து 
    இறக்குமதி செய்ய முடியாது என்பதை இறக்குமதிப்பிழை `ImportError` விதிவிலக்கு குறிக்கிறது. 
    பெரும்பாலும், பொருளின் பெயர் சரியாக எழுதப்படாததே இதற்குக் காரணம்.
    
    ஒருவேளை நீங்கள் `Pi` என்பதற்குப் பதிலாக `pi` (from `math`) இறக்குமதி செய்ய நினைத்திருக்கலாம்
    
    'TESTS:\runtime\test_import_error.py' கோப்பின் `56` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       52| multiple_import_on_same_line()
       53| wrong_case()
       54| 
       55| try:
    -->56|     from math import Pi
       57| except ImportError as e:


IndexError
----------


Assignment
~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_index_error.py", line 87, in test_Assignment
        a[13] = 1
    IndexError: list assignment index out of range
    
    பட்டியல், மடங்கு அல்லது ஒத்த பொருளிலிருந்து (வரிசை) ஒரு பொருளைப் பெற முயலும்போது, 
    இல்லாத குறியீட்டைப் பயன்படுத்தும்போது குறியீட்டுபிழை `IndexError` ஏற்படுகிறது; 
    பொதுவாக, நீங்கள் கொடுக்கும் குறியீட்டு
    வரிசையின் நீளத்தை விட அதிகமாக இருப்பதால் இது நிகழ்கிறது.
    
    `a` இன் குறியீட்டு `13`, ஒரு `பட்டியல்` நீளம் `10`க்கு மதிப்பை 
    ஒதுக்க முயற்சித்தீர்கள்.
    `a` இன் செல்லுபடியாகும் குறியீட்டு மதிப்புகள் `-10` முதல் `9` 
    வரையிலான முழு எண்களாகும்.
    
    'TESTS:\runtime\test_index_error.py' கோப்பின் `87` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       83|     assert "You have tried to assign a value to index `1` of `b`," in result
       84|     assert "a `list` which contains no item." in result
       85| 
       86| try:
    -->87|     a[13] = 1
               ^^^^^
       88| except IndexError as e:

            a:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        


Empty
~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_index_error.py", line 42, in test_Empty
        c = a[1]
    IndexError: list index out of range
    
        `a` இல் உருப்படி இல்லை.
        
    பட்டியல், மடங்கு அல்லது ஒத்த பொருளிலிருந்து (வரிசை) ஒரு பொருளைப் பெற முயலும்போது, 
    இல்லாத குறியீட்டைப் பயன்படுத்தும்போது குறியீட்டுபிழை `IndexError` ஏற்படுகிறது; 
    பொதுவாக, நீங்கள் கொடுக்கும் குறியீட்டு
    வரிசையின் நீளத்தை விட அதிகமாக இருப்பதால் இது நிகழ்கிறது.
    
    `a` இன் குறியீட்டு `1` உடன் உருப்படியைப் பெற முயற்சித்தீர்கள்,
    ஒரு `பட்டியல்` இதில் உருப்படி இல்லை.
    
    'TESTS:\runtime\test_index_error.py' கோப்பின் `42` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       39| def test_Empty():
       40|     a = []
       41|     try:
    -->42|         c = a[1]
                       ^^^^
       43|     except IndexError as e:

            a:  []
        


Long list
~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_index_error.py", line 27, in test_Long_list
        print(a[60], b[0])
    IndexError: list index out of range
    
    பட்டியல், மடங்கு அல்லது ஒத்த பொருளிலிருந்து (வரிசை) ஒரு பொருளைப் பெற முயலும்போது, 
    இல்லாத குறியீட்டைப் பயன்படுத்தும்போது குறியீட்டுபிழை `IndexError` ஏற்படுகிறது; 
    பொதுவாக, நீங்கள் கொடுக்கும் குறியீட்டு
    வரிசையின் நீளத்தை விட அதிகமாக இருப்பதால் இது நிகழ்கிறது.
    
    `a` இன் குறியீட்டு `60` உடன் உருப்படியைப் பெற முயற்சித்தீர்கள்,
    ஒரு `பட்டியல்` நீளம் `40`.
    `a` இன் செல்லுபடியாகும் குறியீட்டு மதிப்புகள் `-40` முதல் `39` 
    வரையிலான முழு எண்களாகும்.
    
    'TESTS:\runtime\test_index_error.py' கோப்பின் `27` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       24| a = list(range(40))
       25| b = tuple(range(50))
       26| try:
    -->27|     print(a[60], b[0])
                     ^^^^^
       28| except IndexError as e:

            a:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, ...]
                len(a): 40
        
        


Short tuple
~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_index_error.py", line 10, in test_Short_tuple
        print(a[3], b[2])
    IndexError: tuple index out of range
    
        நினைவில் கொள்ளுங்கள்: ஒரு `மடங்கு` இன் முதல் உருப்படி குறியீட்டு 1 இல் இல்லை, ஆனால் குறியீட்டு 0 இல் உள்ளது.
        
    பட்டியல், மடங்கு அல்லது ஒத்த பொருளிலிருந்து (வரிசை) ஒரு பொருளைப் பெற முயலும்போது, 
    இல்லாத குறியீட்டைப் பயன்படுத்தும்போது குறியீட்டுபிழை `IndexError` ஏற்படுகிறது; 
    பொதுவாக, நீங்கள் கொடுக்கும் குறியீட்டு
    வரிசையின் நீளத்தை விட அதிகமாக இருப்பதால் இது நிகழ்கிறது.
    
    `a` இன் குறியீட்டு `3` உடன் உருப்படியைப் பெற முயற்சித்தீர்கள்,
    ஒரு `மடங்கு` நீளம் `3`.
    `a` இன் செல்லுபடியாகும் குறியீட்டு மதிப்புகள் `-3` முதல் `2` 
    வரையிலான முழு எண்களாகும்.
    
    'TESTS:\runtime\test_index_error.py' கோப்பின் `10` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
        7| a = (1, 2, 3)
        8| b = [1, 2, 3]
        9| try:
    -->10|     print(a[3], b[2])
                     ^^^^
       11| except IndexError as e:

            a:  (1, 2, 3)
        


KeyError
--------


ChainMap
~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "PYTHON_LIB:\collections\__init__.py", line 1056, in pop
        return self.maps[0].pop(key, *args)
    KeyError: 42
    
        During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "TESTS:\runtime\test_key_error.py", line 65, in test_ChainMap
        d.pop(42)
    KeyError: 'Key not found in the first mapping: 42'
    
    பைதான் அகராதியிலோ அல்லது அதைப் போன்ற பொருளிலோ ஒரு மதிப்பு
    திறவுகோலாக காணப்படும்போது திறவுகோல்பிழை `KeyError` எழுப்பப்படுகிறது.
    
    `ChainMap` வகைப் பொருளான `d` இல் `42` திறவுகோலைக் காண முடியவில்லை.
    
    'TESTS:\runtime\test_key_error.py' கோப்பின் `65` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       62| from collections import ChainMap
       63| d = ChainMap({}, {})
       64| try:
    -->65|     d.pop(42)
               ^^^^^^^^^
       66| except KeyError as e:

            d:  ChainMap({}, {})
            d.pop:  <bound method ChainMap.pop> of ChainMap({}, {})
        


Forgot to convert to string
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_key_error.py", line 120, in test_Forgot_to_convert_to_string
        print(squares[2])
    KeyError: 2
    
        `2` ஐ சரமாக மாற்ற மறந்துவிட்டீர்களா?
        
    பைதான் அகராதியிலோ அல்லது அதைப் போன்ற பொருளிலோ ஒரு மதிப்பு
    திறவுகோலாக காணப்படும்போது திறவுகோல்பிழை `KeyError` எழுப்பப்படுகிறது.
    
    `2` திறவுகோலை `squares` இல் காண முடியாது.
    `squares` இல் `str(2)` க்கு ஒத்த சரம் விசை உள்ளது.
    ஒருவேளை நீங்கள் திறவுகோலை சரமாக மாற்ற மறந்துவிட்டீர்கள்.
    
    'TESTS:\runtime\test_key_error.py' கோப்பின் `120` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       117| def test_Forgot_to_convert_to_string():
       118|     squares = {"1": 1, "2": 4, "3": 9}
       119|     try:
    -->120|         print(squares[2])
                          ^^^^^^^^^^
       121|     except KeyError as e:

            squares:  {'1': 1, '2': 4, '3': 9}
        


Generic key error
~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_key_error.py", line 46, in test_Generic_key_error
        d["c"]
    KeyError: 'c'
    
    பைதான் அகராதியிலோ அல்லது அதைப் போன்ற பொருளிலோ ஒரு மதிப்பு
    திறவுகோலாக காணப்படும்போது திறவுகோல்பிழை `KeyError` எழுப்பப்படுகிறது.
    
    `'c'` திறவுகோலை `d` இல் காண முடியாது.
    
    'TESTS:\runtime\test_key_error.py' கோப்பின் `46` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       43| def test_Generic_key_error():
       44|     d = {"a": 1, "b": 2}
       45|     try:
    -->46|         d["c"]
                   ^^^^^^
       47|     except KeyError as e:

            d:  {'a': 1, 'b': 2}
        


Popitem empty ChainMap
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "PYTHON_LIB:\collections\__init__.py", line 1049, in popitem
        return self.maps[0].popitem()
    KeyError: 'popitem(): dictionary is empty'
    
        During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "TESTS:\runtime\test_key_error.py", line 27, in test_Popitem_empty_ChainMap
        alpha.popitem()
    KeyError: 'No keys found in the first mapping.'
    
        `alpha` என்பது வெற்று `ChainMap`.
        
    பைதான் அகராதியிலோ அல்லது அதைப் போன்ற பொருளிலோ ஒரு மதிப்பு
    திறவுகோலாக காணப்படும்போது திறவுகோல்பிழை `KeyError` எழுப்பப்படுகிறது.
    
    `alpha` இலிருந்து ஒரு உருப்படியை மீட்டெடுக்க முயற்சித்தீர்கள், அது காலியான `ChainMap` ஆகும்.
    
    'TESTS:\runtime\test_key_error.py' கோப்பின் `27` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       24| from collections import ChainMap
       25| alpha = ChainMap({}, {})
       26| try:
    -->27|     alpha.popitem()
               ^^^^^^^^^^^^^^^
       28| except KeyError as e:

            alpha:  ChainMap({}, {})
            alpha.popitem:  <bound method ChainMap.popitem> of ChainMap({}, {})
        


Popitem empty dict
~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_key_error.py", line 8, in test_Popitem_empty_dict
        d.popitem()
    KeyError: 'popitem(): dictionary is empty'
    
        `d` என்பது வெற்று `dict`.
        
    பைதான் அகராதியிலோ அல்லது அதைப் போன்ற பொருளிலோ ஒரு மதிப்பு
    திறவுகோலாக காணப்படும்போது திறவுகோல்பிழை `KeyError` எழுப்பப்படுகிறது.
    
    `d` இலிருந்து ஒரு உருப்படியை மீட்டெடுக்க முயற்சித்தீர்கள், அது வெற்று `dict` ஆகும்.
    
    'TESTS:\runtime\test_key_error.py' கோப்பின் `8` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       5| def test_Popitem_empty_dict():
       6|     d = {}
       7|     try:
    -->8|         d.popitem()
                  ^^^^^^^^^^^
       9|     except KeyError as e:

            d:  {}
            d.popitem:  <builtin method popitem of dict object>
        


Similar names
~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_key_error.py", line 151, in test_Similar_names
        a = second["alpha"]
    KeyError: 'alpha'
    
        `'alpha0'` எனக் குறிப்பிடுகிறீர்களா?
        
    பைதான் அகராதியிலோ அல்லது அதைப் போன்ற பொருளிலோ ஒரு மதிப்பு
    திறவுகோலாக காணப்படும்போது திறவுகோல்பிழை `KeyError` எழுப்பப்படுகிறது.
    
    `'alpha'` திறவுகோலை `second` இல் காண முடியாது.
    `second` என்பது `'alpha'` போன்ற சில திறவுகோலைகளைக் கொண்டுள்ளது: 
    `'alpha0', 'alpha11', 'alpha12'`.
    
    'TESTS:\runtime\test_key_error.py' கோப்பின் `151` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       147|     assert ok, diff
       148| 
       149| second = {"alpha0": 1, "alpha11": 2, "alpha12": 3}
       150| try:
    -->151|     a = second["alpha"]
                    ^^^^^^^^^^^^^^^
       152| except KeyError as e:

            second:  {'alpha0': 1, 'alpha11': 2, 'alpha12': 3}
        


String by mistake
~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_key_error.py", line 102, in test_String_by_mistake
        d["(0, 0)"]
    KeyError: '(0, 0)'
    
        தவறுதலாக `(0, 0)` ஐ சரமாக மாற்றிவிட்டீர்களா?
        
    பைதான் அகராதியிலோ அல்லது அதைப் போன்ற பொருளிலோ ஒரு மதிப்பு
    திறவுகோலாக காணப்படும்போது திறவுகோல்பிழை `KeyError` எழுப்பப்படுகிறது.
    
    `'(0, 0)'` திறவுகோலை `d` இல் காண முடியாது.
    `'(0, 0)'` என்பது ஒரு சரம்.
    `d` இன் திறவுகோல் உள்ளது, அதன் சரம் பிரதிநிதித்துவம் 
    `'(0, 0)'` ஐ ஒத்ததாக இருக்கும்.
    
    'TESTS:\runtime\test_key_error.py' கோப்பின் `102` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
        98| chain_map_string_by_mistake()  # do not show in docs
        99| 
       100| d = {(0, 0): "origin"}
       101| try:
    -->102|     d["(0, 0)"]
                ^^^^^^^^^^^
       103| except KeyError as e:

            d:  {(0, 0): 'origin'}
        


LookupError
-----------


Generic
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_lookup_error.py", line 10, in test_Generic
        raise LookupError("Fake message")
    LookupError: Fake message
    
    தேடல்பிழை `LookupError` என்பது அட்டவணை அல்லது வரிசைமுறையில் பயன்படுத்தப்படும் திறவுகோல் அல்லது குறியீட்டு தவறானதாக இருக்கும் போது
    எழுப்பப்படும் விதிவிலக்குகளுக்கான அடிப்படை வகுப்பாகும்.
    இது codecs.lookup() மூலமாகவும் நேரடியாக எழுப்பப்படலாம்.
    
    'TESTS:\runtime\test_lookup_error.py' கோப்பின் `10` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
        4| def test_Generic():
        5|     try:
        6|         # LookupError is the base class for KeyError and IndexError.
        7|         # It should normally not be raised by user code,
        8|         # other than possibly codecs.lookup(), which is why we raise
        9|         # it directly here for our example.
    -->10|         raise LookupError("Fake message")
       11|     except LookupError as e:

            LookupError:  <class LookupError>
        


ModuleNotFoundError
-------------------


Need to install module
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_module_not_found_error.py", line 80, in test_Need_to_install_module
        import alphabet
    ModuleNotFoundError: No module named 'alphabet'
    
    ஒரு தொகுதிகண்டறியப்படவில்லைபிழை `ModuleNotFoundError` விதிவிலக்கு,
    பைத்தானால் கண்டுபிடிக்க முடியாத ஒரு தொகுதியை நீங்கள் இறக்குமதி செய்ய முயற்சிக்கிறீர்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் தொகுதியின் பெயரை தவறாக எழுதியதாலோ அல்லது உங்கள் கணினியில்
    நிறுவப்படாததாலோ இது நிகழலாம்.
    
    `alphabet` என்ற பெயருடைய எந்தத் தொகுதியையும் இறக்குமதி செய்ய முடியாது. 
    ஒருவேளை நீங்கள் அதை நிறுவ வேண்டும்.
    
    'TESTS:\runtime\test_module_not_found_error.py' கோப்பின் `80` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       78| def test_Need_to_install_module():
       79|     try:
    -->80|         import alphabet
       81|     except ModuleNotFoundError as e:


Not a package
~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_module_not_found_error.py", line 23, in test_Not_a_package
        import os.xxx
    ModuleNotFoundError: No module named 'os.xxx'; 'os' is not a package
    
    ஒரு தொகுதிகண்டறியப்படவில்லைபிழை `ModuleNotFoundError` விதிவிலக்கு,
    பைத்தானால் கண்டுபிடிக்க முடியாத ஒரு தொகுதியை நீங்கள் இறக்குமதி செய்ய முயற்சிக்கிறீர்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் தொகுதியின் பெயரை தவறாக எழுதியதாலோ அல்லது உங்கள் கணினியில்
    நிறுவப்படாததாலோ இது நிகழலாம்.
    
    `xxx` ஐ `os` இலிருந்து இறக்குமதி செய்ய முடியாது.
    
    'TESTS:\runtime\test_module_not_found_error.py' கோப்பின் `23` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       20| def test_Not_a_package():
       21| 
       22|     try:
    -->23|         import os.xxx
       24|     except ModuleNotFoundError as e:


Not a package similar name
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_module_not_found_error.py", line 37, in test_Not_a_package_similar_name
        import os.pathh
    ModuleNotFoundError: No module named 'os.pathh'; 'os' is not a package
    
        நீங்கள் குறிப்பிடுவது `import os.path`?
        
    ஒரு தொகுதிகண்டறியப்படவில்லைபிழை `ModuleNotFoundError` விதிவிலக்கு,
    பைத்தானால் கண்டுபிடிக்க முடியாத ஒரு தொகுதியை நீங்கள் இறக்குமதி செய்ய முயற்சிக்கிறீர்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் தொகுதியின் பெயரை தவறாக எழுதியதாலோ அல்லது உங்கள் கணினியில்
    நிறுவப்படாததாலோ இது நிகழலாம்.
    
    ஒருவேளை நீங்கள் `import os.path` எனக் குறிப்பிட்டிருக்கலாம்.
    `path` என்பது `pathh` என்பதற்கு ஒத்த பெயராகும், மேலும் இது `os` 
    இலிருந்து இறக்குமதி செய்யக்கூடிய ஒரு தொகுதியாகும்.
    
    'TESTS:\runtime\test_module_not_found_error.py' கோப்பின் `37` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       35| def test_Not_a_package_similar_name():
       36|     try:
    -->37|         import os.pathh
       38|     except ModuleNotFoundError as e:


Object not module
~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_module_not_found_error.py", line 51, in test_Object_not_module
        import os.open
    ModuleNotFoundError: No module named 'os.open'; 'os' is not a package
    
        `from os import open` எனக் குறிப்பிடுகிறீர்களா?
        
    ஒரு தொகுதிகண்டறியப்படவில்லைபிழை `ModuleNotFoundError` விதிவிலக்கு,
    பைத்தானால் கண்டுபிடிக்க முடியாத ஒரு தொகுதியை நீங்கள் இறக்குமதி செய்ய முயற்சிக்கிறீர்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் தொகுதியின் பெயரை தவறாக எழுதியதாலோ அல்லது உங்கள் கணினியில்
    நிறுவப்படாததாலோ இது நிகழலாம்.
    
    `open` என்பது ஒரு தனி தொகுதி அல்ல, ஆனால் `os` இன் ஒரு பகுதியாகும்.
    
    'TESTS:\runtime\test_module_not_found_error.py' கோப்பின் `51` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       49| def test_Object_not_module():
       50|     try:
    -->51|         import os.open
       52|     except ModuleNotFoundError as e:

            open:  <builtin function open>
        


Similar object not module
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_module_not_found_error.py", line 65, in test_Similar_object_not_module
        import os.opend
    ModuleNotFoundError: No module named 'os.opend'; 'os' is not a package
    
        `from os import open` எனக் குறிப்பிடுகிறீர்களா?
        
    ஒரு தொகுதிகண்டறியப்படவில்லைபிழை `ModuleNotFoundError` விதிவிலக்கு,
    பைத்தானால் கண்டுபிடிக்க முடியாத ஒரு தொகுதியை நீங்கள் இறக்குமதி செய்ய முயற்சிக்கிறீர்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் தொகுதியின் பெயரை தவறாக எழுதியதாலோ அல்லது உங்கள் கணினியில்
    நிறுவப்படாததாலோ இது நிகழலாம்.
    
    ஒருவேளை நீங்கள் `from os import open` எனக் கூறியிருக்கலாம்.
    `open` என்பது `opend` போன்ற பெயராகும், மேலும் இது `os` இலிருந்து 
    இறக்குமதி செய்யக்கூடிய ஒரு பொருளாகும்.
    `os` இன் பகுதியாக உள்ள ஒத்த பெயர்களைக் கொண்ட பிற பொருள்களில் 
    `popen` அடங்கும்.
    
    'TESTS:\runtime\test_module_not_found_error.py' கோப்பின் `65` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       63| def test_Similar_object_not_module():
       64|     try:
    -->65|         import os.opend
       66|     except ModuleNotFoundError as e:


Standard library module
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_module_not_found_error.py", line 7, in test_Standard_library_module
        import Tkinter
    ModuleNotFoundError: No module named 'Tkinter'
    
        `_tkinter` எனக் குறிப்பிடுகிறீர்களா?
        
    ஒரு தொகுதிகண்டறியப்படவில்லைபிழை `ModuleNotFoundError` விதிவிலக்கு,
    பைத்தானால் கண்டுபிடிக்க முடியாத ஒரு தொகுதியை நீங்கள் இறக்குமதி செய்ய முயற்சிக்கிறீர்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் தொகுதியின் பெயரை தவறாக எழுதியதாலோ அல்லது உங்கள் கணினியில்
    நிறுவப்படாததாலோ இது நிகழலாம்.
    
    `Tkinter` என்ற பெயருடைய எந்தத் தொகுதியையும் இறக்குமதி செய்ய முடியாது. 
    ஒருவேளை நீங்கள் அதை நிறுவ வேண்டும்.
    `_tkinter` என்பது ஒரே மாதிரியான பெயரைக் கொண்ட ஏற்கனவே உள்ள தொகுதி.
    
    'TESTS:\runtime\test_module_not_found_error.py' கோப்பின் `7` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       5| def test_Standard_library_module():
       6|     try:
    -->7|         import Tkinter
       8|     except ModuleNotFoundError as e:


no curses
~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_module_not_found_error.py", line 97, in test_no_curses
        import curses
    ModuleNotFoundError: No module named '_curses'
    
        Windows இல் பைத்தானுடன் curses தொகுதி அரிதாகவே நிறுவப்பட்டுள்ளது.
        
    ஒரு தொகுதிகண்டறியப்படவில்லைபிழை `ModuleNotFoundError` விதிவிலக்கு,
    பைத்தானால் கண்டுபிடிக்க முடியாத ஒரு தொகுதியை நீங்கள் இறக்குமதி செய்ய முயற்சிக்கிறீர்கள் என்பதைக் குறிக்கிறது.
    நீங்கள் தொகுதியின் பெயரை தவறாக எழுதியதாலோ அல்லது உங்கள் கணினியில்
    நிறுவப்படாததாலோ இது நிகழலாம்.
    
    நீங்கள் curses தொகுதியை இறக்குமதி செய்ய முயற்சித்தீர்கள்.
    Windows இல் பைத்தானுடன் curses தொகுதி அரிதாகவே நிறுவப்பட்டுள்ளது.
    
    'TESTS:\runtime\test_module_not_found_error.py' கோப்பின் `97` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       95| def test_no_curses():
       96|     try:
    -->97|         import curses
       98|     except ModuleNotFoundError as e:


NameError
---------


Annotated variable
~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 31, in test_Annotated_variable
        y = x
    NameError: name 'x' is not defined
    
        சம அடையாளத்திற்குப் பதிலாக முக்காற்புள்ளியைப் பயன்படுத்தினீர்களா?
        
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `x` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    global வாய்ப்பில் `x` க்கான வகை குறிப்பு உள்ளது.
    ஒருவேளை நீங்கள் சமமான அடையாளத்திற்குப் பதிலாக முக்காற்புள்ளிப் பயன்படுத்தி எழுதியிருக்கலாம்
    
         x : 3
    
    அதற்கு பதிலாக
    
         x = 3
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `31` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       29| def test_Annotated_variable():
       30|     try:
    -->31|         y = x
                       ^
       32|     except NameError as e:


Custom name
~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 234, in test_Custom_name
        python
    NameError: name 'python' is not defined
    
        நீங்கள் ஏற்கனவே பைத்தானைப் பயன்படுத்துகிறீர்கள்!
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    நீங்கள் ஏற்கனவே பைத்தானைப் பயன்படுத்துகிறீர்கள்!
    'TESTS:\runtime\test_name_error.py' கோப்பின் `234` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       232| def test_Custom_name():
       233|     try:
    -->234|         python
                    ^^^^^^
       235|     except NameError as e:


Free variable referenced
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 217, in test_Free_variable_referenced
        outer()
      File "TESTS:\runtime\test_name_error.py", line 213, in outer
        inner()
      File "TESTS:\runtime\test_name_error.py", line 212, in inner
        return var
    NameError: free variable 'var' referenced before assignment in enclosing scope. Did you mean: 'vars'?
    
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `var` என்பது அறியப்படாத பெயராகும், 
    இது ஒரு மூடிய நோக்கத்தில் உள்ளது, 
    ஆனால் இன்னும் மதிப்பு ஒதுக்கப்படவில்லை.
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `217` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       213|     inner()
       214|     var = 4
       215| 
       216| try:
    -->217|     outer()
                ^^^^^^^
       218| except NameError as e:

            outer:  <function outer>
                defined in <function test_Free_variable_referenced>
        
    'TESTS:\runtime\test_name_error.py' கோப்பின் `212` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       211| def inner():
    -->212|     return var
                       ^^^


Generic
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 15, in test_Generic
        this = something
    NameError: name 'something' is not defined
    
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `something` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    உங்களுக்கான கூடுதல் தகவல் எதுவும் என்னிடம் இல்லை.
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `15` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       13| def test_Generic():
       14|     try:
    -->15|         this = something
                          ^^^^^^^^^
       16|     except NameError as e:


Missing import
~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 138, in test_Missing_import
        unicodedata.something
    NameError: name 'unicodedata' is not defined
    
        `unicodedata` இறக்குமதி செய்ய மறந்துவிட்டீர்களா?
        
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    
    உங்கள் திட்டத்தில் `unicodedata` என்ற பெயர் வரையறுக்கப்படவில்லை.
    பைத்தானின் நிலையான நூலகத்தில் காணப்படும் `unicodedata` ஐ இறக்குமதி 
    செய்ய மறந்துவிட்டீர்கள்.
    
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `138` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       134| if friendly_traceback.get_lang() == "en":
       135|     assert "I have no additional information for you." in result
       136| 
       137| try:
    -->138|     unicodedata.something
                ^^^^^^^^^^^
       139| except NameError as e:


Missing module name
~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 320, in test_Missing_module_name
        frame = Frame()
    NameError: name 'Frame' is not defined. Did you mean: 'frame'?
    
        `tkinter.` சேர்க்க மறந்துவிட்டீர்களா?
        
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `Frame` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    
    global பொருள் `tkinter` ஆனது 
    `Frame` என்ற பண்புக்கூறைக் கொண்டுள்ளது.
    ஒருவேளை நீங்கள் `Frame` என்பதற்குப் பதிலாக 
    `tkinter.Frame` என்று எழுதியிருக்க வேண்டும்.
    
    `Frame` is a name found in the following modules:
    tkinter, tracemalloc.
    Perhaps you forgot to import `Frame` from one of these modules.
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `320` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       317| @pytest.mark.skipif(not tkinter, reason="tkinter not present; likely MacOS")
       318| def test_Missing_module_name():
       319|     try:
    -->320|         frame = Frame()
                            ^^^^^
       321|     except NameError as e:


Missing self 1
~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 270, in test_Missing_self_1
        str(a)
      File "TESTS:\runtime\test_name_error.py", line 261, in __str__
        toys_list = add_toy(  # ensure that it can see 'self' on following line
    NameError: name 'add_toy' is not defined
    
        நீங்கள் தவறான இடத்தில் `self` என்று எழுதினீர்களா?
        
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `add_toy` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    
    local பொருள் `<Pet object> defined in <function test_name_error.test_Missing_self_1>` ஆனது `add_toy` 
    என்ற பண்புக்கூறைக் கொண்டுள்ளது.
    நீங்கள் `add_toy(self, ...` என்பதற்குப் பதிலாக `self.add_toy(...` 
    என்று எழுதியிருக்கலாம்.
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `270` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       266|             return "{} has no toys".format(self.name)
       267| 
       268| a = Pet('Fido')
       269| try:
    -->270|     str(a)
                ^^^^^^
       271| except NameError as e:

            a:  <Pet object>
                defined in <function test_name_error.test_Missing_self_1>
            str:  <class str>
        
    'TESTS:\runtime\test_name_error.py' கோப்பின் `261` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       259| def __str__(self):
       260|     # self at the wrong place
    -->261|     toys_list = add_toy(  # ensure that it can see 'self' on following line
                            ^^^^^^^
       262|                         self, 'something')
       263|     if self.toys:


Missing self 2
~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 305, in test_Missing_self_2
        str(a)
      File "TESTS:\runtime\test_name_error.py", line 297, in __str__
        toys_list = add_toy('something')
    NameError: name 'add_toy' is not defined
    
        `self.` சேர்க்க மறந்துவிட்டீர்களா?
        
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `add_toy` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    
    ஒரு local பொருள், `<Pet object> defined in <function test_name_error.test_Missing_self_2>`, 
    `add_toy` என்ற பண்புக்கூறைக் கொண்டுள்ளது.
    ஒருவேளை நீங்கள் `add_toy` என்பதற்குப் பதிலாக 
    `self.add_toy` என்று எழுதியிருக்க வேண்டும்.
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `305` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       301|             return "{} has no toys".format(self.name)
       302| 
       303| a = Pet('Fido')
       304| try:
    -->305|     str(a)
                ^^^^^^
       306| except NameError as e:

            a:  <Pet object>
                defined in <function test_name_error.test_Missing_self_2>
            str:  <class str>
        
    'TESTS:\runtime\test_name_error.py' கோப்பின் `297` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       295| def __str__(self):
       296|     # Missing self.
    -->297|     toys_list = add_toy('something')
                            ^^^^^^^
       298|     if self.toys:


Synonym
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 97, in test_Synonym
        cost  # wrote from math import * above
    NameError: name 'cost' is not defined. Did you mean: 'cos'?
    
        `cos` எனக் குறிப்பிடுகிறீர்களா?
        
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `cost` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    `cost` என்று எழுதுவதற்குப் பதிலாக, நீங்கள் பின்வருவனவற்றில் ஒன்றைக் குறிப்பிட்டிருக்கலாம்:
    *   உலகளாவிய நோக்கம்: `cos`, `cosh`
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `97` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       93| if friendly_traceback.get_lang() == "en":
       94|     assert "The Python builtin `chr` has a similar name." in result
       95| 
       96| try:
    -->97|     cost  # wrote from math import * above
               ^^^^
       98| except NameError as e:


missing import2
~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 153, in test_missing_import2
        ABCMeta
    NameError: name 'ABCMeta' is not defined
    
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `ABCMeta` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    `ABCMeta` is a name found in the following modules:
    selectors, typing, abc, numbers.
    Perhaps you forgot to import `ABCMeta` from one of these modules.
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `153` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       151| def test_missing_import2():
       152|     try:
    -->153|         ABCMeta
                    ^^^^^^^
       154|     except NameError as e:


missing import3
~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 168, in test_missing_import3
        AF_APPLETALK
    NameError: name 'AF_APPLETALK' is not defined
    
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `AF_APPLETALK` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    `AF_APPLETALK` என்பது தொகுதி `socket` இல் காணப்படும் பெயர்.
    ஒருவேளை நீங்கள் எழுத மறந்துவிட்டீர்கள்
    
        from socket import AF_APPLETALK
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `168` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       166| def test_missing_import3():
       167|     try:
    -->168|         AF_APPLETALK
                    ^^^^^^^^^^^^
       169|     except NameError as e:


missing import from other 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 183, in test_missing_import_from_other_1
        plt.something
    NameError: name 'plt' is not defined
    
        Did you forget to import `matplotlib.pyplot`?
        
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    
    The name `plt` is not defined in your program.
    Perhaps you forgot to write
    
        import matplotlib.pyplot as plt
    
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `183` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       180| def test_missing_import_from_other_1():
       181|     friendly_traceback.add_other_module_names_synonyms({"plt": "matplotlib.pyplot"})
       182|     try:
    -->183|         plt.something
                    ^^^
       184|     except NameError as e:


missing import from other 2
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 197, in test_missing_import_from_other_2
        show()
    NameError: name 'show' is not defined
    
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    உங்கள் திட்டத்தில், `show` என்ற பெயரில் எந்தப் பொருளும் இல்லை.
    `show` is a name found in the following modules:
    mailcap, matplotlib.pyplot, funny.
    Perhaps you forgot to import `show` from one of these modules.
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `197` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       194| def test_missing_import_from_other_2():
       195|     friendly_traceback.add_other_attribute_names({"show": ["matplotlib.pyplot", "funny"] })
       196|     try:
    -->197|         show()
                    ^^^^
       198|     except NameError as e:


special keyword
~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_name_error.py", line 352, in test_special_keyword
        brek
    NameError: name 'brek' is not defined
    
        `break` எனக் குறிப்பிடுகிறீர்களா?
        
    ஒரு பெயர்ப்பிழை `NameError` விதிவிலக்கு என்பது ஒரு மாறி அல்லது 
    செயல்பாட்டுப் பெயர் பைத்தானுக்குத் தெரியாது என்பதைக் குறிக்கிறது.
    பெரும்பாலும், எழுத்துப் பிழை இருப்பதே இதற்குக் காரணம்.
    இருப்பினும், சில நேரங்களில் பெயர் வரையறுக்கப்படுவதற்கு முன்பு அல்லது
    மதிப்பைக் கொடுப்பதற்கு முன்பு பயன்படுத்தப்படுவதால் வருகிறது.
    
    இருப்பினும், `break` என்ற முக்கிய சொல்லை நீங்கள் தவறுதலாக எழுதிவிட்டீர்கள் என்று சந்தேகிக்கிறேன்.
    
    'TESTS:\runtime\test_name_error.py' கோப்பின் `352` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       349| if friendly_traceback.get_lang() == "en":
       350|     assert "Did you mean `continue`" in result
       351| try:
    -->352|     brek
                ^^^^
       353| except NameError as e:


OsError
-------


Urllib error
~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "PYTHON_LIB:\urllib\request.py", line 1348, in do_open
           ... மேலும் வரிகள் காட்டப்படவில்லை. ...
      File "PYTHON_LIB:\socket.py", line 824, in create_connection
        for res in getaddrinfo(host, port, 0, SOCK_STREAM):
      File "PYTHON_LIB:\socket.py", line 955, in getaddrinfo
        for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
    socket.gaierror: [Errno 11001] getaddrinfo failed
    
        During handling of the above exception, another exception occurred:
    
    Traceback (most recent call last):
      File "TESTS:\runtime\test_os_error.py", line 10, in test_Urllib_error
        request.urlopen("http://does_not_exist")
    URLError: <urlopen error [Errno 11001] getaddrinfo failed>
    
    `URLError` வகை விதிவிலக்கு என்பது `OSError` இன் துணைப்பிரிவாகும்.
    Nothing more specific is known about `URLError`.
    
    ஒரு முறைமைபிழை `OSError` விதிவிலக்கு பொதுவாக ஒரு செயல்பாடு 
    அனுமதிக்கப்படவில்லை அல்லது ஆதாரம் இல்லை என்பதைக் குறிக்க இயக்க 
    முறைமையால் எழுப்பப்படுகிறது.
    
    நீங்கள் ஒரு சேவையகத்துடன் இணைக்க முயற்சிக்கிறீர்கள் மற்றும் இணைப்பை 
    உருவாக்க முடியாது என்று நான் சந்தேகிக்கிறேன்.
    
    அப்படியானால், URL இல் எழுத்துப் பிழைகளைச் சரிபார்த்து, 
    உங்கள் இணைய இணைப்பைச் சரிபார்க்கவும்.
    
    'TESTS:\runtime\test_os_error.py' கோப்பின் `10` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
        6| @pytest.mark.skipif(random.randint(0, 50) < 59, reason="very long test")
        7| def test_Urllib_error():
        8|     from urllib import request, error
        9|     try:
    -->10|         request.urlopen("http://does_not_exist")
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       11|     except error.URLError as e:

            request:  <module urllib.request> from PYTHON_LIB:\urllib\request.py
            request.urlopen:  <function urlopen>
        


invalid argument
~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_os_error.py", line 50, in test_invalid_argument
        open("c:\test.txt")
    OSError: [Errno 22] Invalid argument: 'c:\test.txt'
    
        ஒருவேளை நீங்கள் பின்சாய்வு எழுத்துகளை இரட்டிப்பாக்க வேண்டும்.
        
    ஒரு முறைமைபிழை `OSError` விதிவிலக்கு பொதுவாக ஒரு செயல்பாடு 
    அனுமதிக்கப்படவில்லை அல்லது ஆதாரம் இல்லை என்பதைக் குறிக்க இயக்க 
    முறைமையால் எழுப்பப்படுகிறது.
    
    குறைந்தது ஒரு பின்சாய்வு எழுத்து, `\` உள்ள கோப்புப் பெயர் அல்லது பாதையை 
    நீங்கள் எழுதியிருக்கிறீர்கள் என்று நான் சந்தேகிக்கிறேன். 
    தப்பிக்கும் வரிசை என அறியப்படுவதன் தொடக்கத்தைக் குறிப்பதாக பைதான் இதை 
    விளக்கியிருக்கலாம். 
    சிக்கலைத் தீர்க்க, கோப்புப் பெயர் அல்லது பாதையின் முன் முன்னொட்டாக `r` 
    என்ற எழுத்தைச் சேர்ப்பதன் மூலம் 'மூல சரம்' என அழைக்கப்படுவதை எழுதுங்கள் 
    அல்லது அனைத்து ஒற்றை பின்சாய்வு எழுத்துகளான `\`, இரட்டை எழுத்துக்களால் 
    மாற்றவும்: `\\`.
    
    'TESTS:\runtime\test_os_error.py' கோப்பின் `50` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       47| if os.name != "nt":
       48|     return "Windows test only", "No result"
       49| try:
    -->50|     open("c:\test.txt")
               ^^^^^^^^^^^^^^^^^^^
       51| except OSError as e:

            open:  <builtin function open>
        


no information
~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_os_error.py", line 30, in test_no_information
        raise OSError("Some unknown message")
    OSError: Some unknown message
    
        நட்பு-மீண்டும்கண்டுபிடிக்க Friendly-tracebackக்கு இந்த பிழைக்கான காரணம் தெரியவில்லை.
        
    ஒரு முறைமைபிழை `OSError` விதிவிலக்கு பொதுவாக ஒரு செயல்பாடு 
    அனுமதிக்கப்படவில்லை அல்லது ஆதாரம் இல்லை என்பதைக் குறிக்க இயக்க 
    முறைமையால் எழுப்பப்படுகிறது.
    
    இந்த விதிவிலக்கு பற்றி எந்த தகவலும் தெரியவில்லை.
    தயவுசெய்து இந்த உதாரணத்தைப் புகாரளிக்கவும்
    https://github.com/friendly-traceback/friendly-traceback/issues/new
    நீங்கள் REPL ஐப் பயன்படுத்தினால், அவ்வாறு செய்ய `www('bug')` ஐப் பயன்படுத்தவும்.
    
    நீங்கள் நட்பு பணியகத்தை பயன்படுத்துகிறீர்கள் என்றால், அதற்கு `www()` ஐப் 
    பயன்படுத்தி இந்த குறிப்பிட்ட வழக்கை இணையத்தில் தேடுங்கள்.
    
    'TESTS:\runtime\test_os_error.py' கோப்பின் `30` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       27| old_debug = friendly_traceback.debug_helper.DEBUG
       28| friendly_traceback.debug_helper.DEBUG = False
       29| try:
    -->30|     raise OSError("Some unknown message")
       31| except OSError as e:

            OSError:  <class OSError>
        


OverflowError
-------------


Generic
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_overflow_error.py", line 6, in test_Generic
        2.0 ** 1600
    OverflowError: (34, 'Result too large')
    
    ஒரு எண்கணிதச் செயல்பாட்டின் விளைவு கணினியின் செயலியால் கையாள 
    முடியாத அளவுக்குப் பெரிதாக இருக்கும்போது வழிதல்பிழை `OverflowError` எழுப்பப்படுகிறது.
    
    'TESTS:\runtime\test_overflow_error.py' கோப்பின் `6` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       4| def test_Generic():
       5|     try:
    -->6|         2.0 ** 1600
                  ^^^^^^^^^^^
       7|     except OverflowError as e:


Huge lenght
~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_overflow_error.py", line 25, in test_Huge_lenght
        len(huge)
    OverflowError: Python int too large to convert to C ssize_t
    
    ஒரு எண்கணிதச் செயல்பாட்டின் விளைவு கணினியின் செயலியால் கையாள 
    முடியாத அளவுக்குப் பெரிதாக இருக்கும்போது வழிதல்பிழை `OverflowError` எழுப்பப்படுகிறது.
    
    'TESTS:\runtime\test_overflow_error.py' கோப்பின் `25` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       22| def test_Huge_lenght():
       23|     huge = range(1<<10000)
       24|     try:
    -->25|         len(huge)
                   ^^^^^^^^^
       26|     except OverflowError as e:

            huge:  range(0, ...)
                   len(huge): Object too large to be processed by Python.
        
            len:  <builtin function len>
        


RecursionError
--------------


Generic
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_recursion_error.py", line 8, in test_Generic
        a()
           ... மேலும் வரிகள் காட்டப்படவில்லை. ...
      File "TESTS:\runtime\test_recursion_error.py", line 6, in a
        return a()
      File "TESTS:\runtime\test_recursion_error.py", line 6, in a
        return a()
    RecursionError: maximum recursion depth exceeded
    
    ஒரு செயல்பாடு நேரடியாகவோ அல்லது மறைமுகமாகவோ பல முறை தன்னை
    அழைக்கும் போது மறுநிகழ்வுபிழை `RecursionError` எழுப்பப்படுகிறது.
    உங்கள் குறியீட்டில் நீங்கள் பிழை செய்துள்ளீர்கள் என்பதையும் உங்கள் நிரல்
    ஒருபோதும் நிறுத்தப்படாது என்பதையும் இது எப்போதும் குறிக்கிறது.
    
    'TESTS:\runtime\test_recursion_error.py' கோப்பின் `8` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       5| def a():
       6|     return a()
       7| try:
    -->8|     a()
              ^^^
       9| except RecursionError as e:

            a:  <function a> defined in <function test_Generic>
        
    'TESTS:\runtime\test_recursion_error.py' கோப்பின் `6` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       5| def a():
    -->6|     return a()
                     ^^^

            a:  <function a> defined in <function test_Generic>
        


TypeError
---------


Argument of object is not iterable
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 843, in test_Argument_of_object_is_not_iterable
        a in b
    TypeError: argument of type 'object' is not iterable
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    An iterable is an object capable of returning its members one at a time.
    Python containers (`list, tuple, dict`, etc.) are iterables.
    'b' is not a container. A container is required here.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `843` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       840| a = object()
       841| b = object()
       842| try:
    -->843|     a in b
                ^^^^^^
       844| except TypeError as e:

            a:  <object object>
            b:  <object object>
        


Bad type for unary operator
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 427, in test_Bad_type_for_unary_operator
        a =+ "def"
    TypeError: bad operand type for unary +: 'str'
    
        ஒருவேளை நீங்கள் `=+` என்பதற்குப் பதிலாக `+=` என்று எழுத நினைத்திருக்கலாம்
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    பின்வரும் வகை பொருளுடன் '+' unary இயக்கியைப்
     பயன்படுத்த முயற்சித்தீர்கள்: ஒரு சரம் (`str`). 
    இந்த வகையான பொருளுக்கு இந்த செயல்பாடு வரையறுக்கப்படவில்லை.
    
    ஒருவேளை நீங்கள் `=+` என்பதற்குப் பதிலாக `+=` என்று எழுத நினைத்திருக்கலாம்
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `427` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       422|     assert "You tried to use the unary operator '~'" in result
       423| 
       424| try:
       425|     # fmt: off
       426|     a = "abc"
    -->427|     a =+ "def"
                   ^^^^^^^
       428|     # fmt: on


Builtin has no len
~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 901, in test_Builtin_has_no_len
        len("Hello world".split)
    TypeError: object of type 'builtin_function_or_method' has no len()
    
        `"Hello world".split` என்பதை அழைக்க மறந்துவிட்டீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    `"Hello world".split` என்பதை அழைக்க, அடைப்புக்குறிகளைச் சேர்க்க மறந்துவிட்டீர்கள் என்று சந்தேகிக்கிறேன். 
    நீங்கள் இவ்வாறு எழுத நினைத்திருக்கலாம்: 
    `len("Hello world".split())`
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `901` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       899| def test_Builtin_has_no_len():
       900|     try:
    -->901|         len("Hello world".split)
                    ^^^^^^^^^^^^^^^^^^^^^^^^
       902|     except TypeError as e:

            len:  <builtin function len>
            "Hello world".split:  <builtin method split of str object>
        


Can only concatenate
~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 39, in test_Can_only_concatenate
        result = a_tuple + a_list
    TypeError: can only concatenate tuple (not "list") to tuple
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    நீங்கள் இரண்டு வெவ்வேறு வகையான பொருட்களை இணைக்க (சேர்க்க) முயற்சித்தீர்கள்: 
    ஒரு `மடங்கு` மற்றும் ஒரு `பட்டியல்`.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `39` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       36| try:
       37|     a_tuple = (1, 2, 3)
       38|     a_list = [1, 2, 3]
    -->39|     result = a_tuple + a_list
                        ^^^^^^^^^^^^^^^^
       40| except TypeError as e:

            a_list:  [1, 2, 3]
            a_tuple:  (1, 2, 3)
        


Cannot convert dictionary update sequence
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 886, in test_Cannot_convert_dictionary_update_sequence
        dd.update([1, 2, 3])
    TypeError: cannot convert dictionary update sequence element #0 to a sequence
    
        ஒருவேளை நீங்கள் `dict.fromkeys()` முறையைப் பயன்படுத்த வேண்டும்.
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    `dict.update()` ஒரு வரிசையை ஒரு வாதமாக ஏற்கவில்லை. 
    `dd.update([1, 2, 3])` என்று எழுதுவதற்குப் 
    பதிலாக நீங்கள் `dict.fromkeys()` முறையைப் பயன்படுத்த வேண்டும்: `dd.update( dict.fromkeys([1, 2, 3]) )`.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `886` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       882|     assert "you should use the `dict.fromkeys()`" in result
       883| 
       884| dd = {"a": "a"}
       885| try:
    -->886|     dd.update([1, 2, 3])
                ^^^^^^^^^^^^^^^^^^^^
       887| except TypeError as e:

            dd:  {'a': 'a'}
            dd.update:  <builtin method update of dict object>
        


Cannot multiply by non int
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 652, in test_Cannot_multiply_by_non_int
        "a" * "2"
    TypeError: can't multiply sequence by non-int of type 'str'
    
        `"2"`ஐ முழு எண்ணாக மாற்ற மறந்துவிட்டீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    பட்டியல், மடங்குகள், சரங்கள், போன்ற., தொடர்களை மட்டுமே 
    முழு எண்களால் பெருக்க முடியும்.
    ஒருவேளை நீங்கள் `"2"` ஐ முழு எண்ணாக மாற்ற மறந்துவிட்டீர்கள்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `652` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       648| if friendly_traceback.get_lang() == "en":
       649|     assert "Did you forget to convert `c` into an integer?" in result
       650| 
       651| try:
    -->652|     "a" * "2"
                ^^^^^^^^^
       653| except TypeError as e:


Cannot unpack non iterable object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 857, in test_Cannot_unpack_non_iterable_object
        a, b = 42.0
    TypeError: cannot unpack non-iterable float object
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    கட்டவிழ் என்பது, மறுசெய்யக்கூடிய ஒவ்வொரு பொருளுக்கும் 
    ஒரு பெயரை ஒதுக்க ஒரு வசதியான வழியாகும்.
    மறுசெய்யக்கூடியவை என்பது அதன் உறுப்பினர்களை ஒரு நேரத்தில் திருப்பி அனுப்பும் திறன் கொண்ட ஒரு பொருள். 
    பைதான் கொள்கலன்கள் (`பட்டியல், மடங்கு, அகராதி`, முதலியன.) மறுசெய்யக்கூடியவை, 
    ஆனால் `float` வகைப் பொருள்கள் அல்ல.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `857` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       855| def test_Cannot_unpack_non_iterable_object():
       856|     try:
    -->857|         a, b = 42.0
       858|     except TypeError as e:


Cant mod complex numbers
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 54, in test_Cant_mod_complex_numbers
        3 + 3j % 2
    TypeError: unsupported operand type(s) for %: 'complex' and 'int'
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    You cannot use complex numbers with the modulo operator `%`.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `54` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       52| def test_Cant_mod_complex_numbers():
       53|     try:
    -->54|         3 + 3j % 2
                       ^^^^^^
       55|     except TypeError as e:


Comparison not supported
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 375, in test_Comparison_not_supported
        b >= a
    TypeError: '>=' not supported between instances of 'int' and 'str'
    
        `a` சரத்தை ஒரு முழுஎண் (`int`) ஆக மாற்ற மறந்துவிட்டீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    பொருந்தாத இரண்டு வகையான பொருள்களுக்கு இடையே (>=) 
    வரிசை ஒப்பீடு செய்ய முயற்சித்தீர்கள்: 
    ஒரு முழுஎண் (`int`) மற்றும் ஒரு சரம் (`str`).
    ஒருவேளை நீங்கள் `a` சரத்தை ஒரு முழுஎண் (`int`) ஆக மாற்ற மறந்துவிட்டீர்கள்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `375` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       372| try:
       373|     a = "2"
       374|     b = 42
    -->375|     b >= a
                ^^^^^^
       376| except TypeError as e:

            a:  '2'
            b:  42
        


Derive from BaseException
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 594, in test_Derive_from_BaseException
        raise "exception"  # noqa
    TypeError: exceptions must derive from BaseException
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    Exceptions must be derived from `BaseException`.
    It is recommended that user-defined exceptions derive from
    `Exception`, a subclass of `BaseException`.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `594` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       590| if friendly_traceback.get_lang() == "en":
       591|     assert "you must only have classes that derive from `BaseException`" in result
       592| 
       593| try:
    -->594|     raise "exception"  # noqa
       595| except TypeError as e:


Generator has no len
~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 1062, in test_Generator_has_no_len
        nb = len(letter
    TypeError: object of type 'generator' has no len()
    
        You likely need to build a list first.
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    I am guessing that you were trying to count the number of elements
    produced by a generator expression. You first need to capture them
    in a list:
    
        len([letter                 for letter in "word"])
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `1062` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       1060| def test_Generator_has_no_len():
       1061|     try:
    -->1062|         nb = len(letter
                          ^^^^^^^^^^
       1063|                  for letter in "word")
                              ^^^^^^^^^^^^^^^^^^^^^
       1064|     except TypeError as e:

            len:  <builtin function len>
        


Indices must be integers or slices
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 736, in test_Indices_must_be_integers_or_slices
        [1, 2, 3]["2"]
    TypeError: list indices must be integers or slices, not str
    
        `"2"`ஐ முழு எண்ணாக மாற்ற மறந்துவிட்டீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    `[1, 2, 3]["2"]` வெளிப்பாட்டில், 
    சதுர அடைப்புக்குறிகளுக்கு இடையே உள்ளவை, `[...]`, 
    ஒரு முழு எண் அல்லது துண்டாக இருக்க வேண்டும் 
    (`தொடக்கம்:நிறுத்து` அல்லது `தொடக்கம்:நிறுத்தம்:படி`) 
    மற்றும் உங்களிடம் உள்ளது அதற்குப் பதிலாக ஒரு சரம் (`str`) பயன்படுத்தப்பட்டது.
    
    ஒருவேளை நீங்கள் `"2"` ஐ முழு எண்ணாக மாற்ற மறந்துவிட்டீர்கள்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `736` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       732| if friendly_traceback.get_lang() == "en":
       733|     assert "Perhaps you forgot to convert `2.0` into an integer." in result
       734| 
       735| try:
    -->736|     [1, 2, 3]["2"]
                ^^^^^^^^^^^^^^
       737| except TypeError as e:


Not an integer
~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 698, in test_Not_an_integer
        range(c, d)
    TypeError: 'str' object cannot be interpreted as an integer
    
        `c, d` முழு எண்களாக மாற்ற மறந்துவிட்டீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    முழு எண் எதிர்பார்க்கப்படும் `str` வகைப் பொருளை நீங்கள் எழுதியுள்ளீர்கள்.
    ஒருவேளை நீங்கள் `c, d` ஐ முழு எண்களாக மாற்ற மறந்துவிட்டீர்கள்.
    'TESTS:\runtime\test_type_error.py' கோப்பின் `698` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       694|     assert "Perhaps you forgot to convert `1.0" in result
       695| 
       696| c, d = "2", "3"
       697| try:
    -->698|     range(c, d)
                ^^^^^^^^^^^
       699| except TypeError as e:

            c:  '2'
            d:  '3'
            range:  <class range>
        


Not callable
~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 561, in test_Not_callable
        _ = [1, 2](a + b)
    TypeError: 'list' object is not callable
    
        `[1, 2][a + b]` என்பதை நீங்கள் குறிப்பிடுகிறீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    சுற்றியுள்ள அடைப்புக்குறியின் காரணமாக, `(a + b)` என்பது 
    `[1, 2]` க்கான செயல்பாட்டு அழைப்பைக் குறிக்கும் என பைத்தானால் 
    விளக்கப்படுகிறது, இது `list` வகையின் ஒரு பொருளாகும், 
    இது அழைக்கப்பட முடியாது.
    
    இருப்பினும், `[1, 2]` என்பது ஒரு வரிசை.
    ஒருவேளை நீங்கள் `()` என்பதற்குப் பதிலாக `[]` ஐப் பயன்படுத்தி 
    `[1, 2][a + b]` என்று எழுதலாம்
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `561` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       557|     assert "b.a_list[3]" in result
       558| 
       559| try:
       560|     a, b = 3, 7
    -->561|     _ = [1, 2](a + b)
                    ^^^^^^^^^^^^^
       562| except TypeError as e:

            a:  3
            b:  7
            a + b:  10
        


Object is not iterable
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 826, in test_Object_is_not_iterable
        list(42)
    TypeError: 'int' object is not iterable
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    மறுசெய்யக்கூடியவை என்பது அதன் உறுப்பினர்களை ஒரு நேரத்தில் திருப்பி அனுப்பும் திறன் கொண்ட ஒரு பொருள்.
    பைதான் கொள்கலன்கள் (`பட்டியல், மடங்கு, அகராதி`, முதலியன.) மறுசெய்யக்கூடியவை. 
    இங்கே ஒரு மறுசெய்யக்கூடியவை தேவைப்படுகிறது.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `826` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       824| def test_Object_is_not_iterable():
       825|     try:
    -->826|         list(42)
                    ^^^^^^^^
       827|     except TypeError as e:

            list:  <class list>
        


Object is not subscriptable
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 811, in test_Object_is_not_subscriptable
        a = f[1]
    TypeError: 'function' object is not subscriptable
    
        `f(1)` என்று சொன்னீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    சந்தா பெறக்கூடிய பொருள்கள் பொதுவாக கொள்கலன்களாகும், அதில் இருந்து 
    நீங்கள் `[...]` குறியீட்டைப் பயன்படுத்தி உருப்படியை மீட்டெடுக்கலாம்.
    
    ஒருவேளை நீங்கள் `f(1)` என்று எழுத நினைத்திருக்கலாம்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `811` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       807| def f():
       808|     pass
       809| 
       810| try:
    -->811|     a = f[1]
                    ^^^^
       812| except TypeError as e:

            f:  <function f>
                defined in <function test_Object_is_not_subscriptable>
        


Slice indices must be integers or None
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 751, in test_Slice_indices_must_be_integers_or_None
        [1, 2, 3][1.0:2.0]
    TypeError: slice indices must be integers or None or have an __index__ method
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    ஒரு வரிசையிலிருந்து உறுப்புகளின் வரம்பைப் பிரித்தெடுக்க ஒரு துண்டைப் 
    பயன்படுத்தும்போது, அது `[தொடக்கம்:நிறுத்து]` அல்லது 
    `[தொடக்கம்:நிறுத்தம்:படி]` ஒவ்வொரு `தொடக்கம்`, `நிறுத்தம்`, `படி` போன்றவை  
    ஒரு முழு எண்ணாக இருக்க வேண்டும், `None` அல்லது `__index__` முறையைக் 
    கொண்ட வேறு ஏதேனும் பொருள் இருக்கலாம்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `751` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       749| def test_Slice_indices_must_be_integers_or_None():
       750|     try:
    -->751|         [1, 2, 3][1.0:2.0]
                    ^^^^^^^^^^^^^^^^^^
       752|     except TypeError as e:


Too few positional argument
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 500, in test_Too_few_positional_argument
        fn(1)
    TypeError: test_Too_few_positional_argument.<locals>.fn() missing 2 required positional arguments: 'b' and 'c'
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    'test_Too_few_positional_argument.<locals>.fn()' செயல்பாட்டிற்குத் தேவையானதை விட குறைவான நிலை 
    வாதங்களுடன் (2 இல்லை) என்று நீங்கள் அழைத்திருக்கிறீர்கள்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `500` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       496| def fn(a, b, c):
       497|     pass
       498| 
       499| try:
    -->500|     fn(1)
                ^^^^^
       501| except TypeError as e:

            fn:  <function fn>
                defined in <function test_Too_few_positional_argument>
        


Too many positional argument
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 480, in test_Too_many_positional_argument
        A().f(1)
    TypeError: test_Too_many_positional_argument.<locals>.A.f() takes 1 positional argument but 2 were given
    
        `A.f` என்பதை வரையறுக்கும்போது `self` என்பதை மறந்துவிட்டீர்கள்.
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    நீங்கள் 2 நிலை வாதம்(கள்) உடன் `A.f` 
    செயல்பாட்டை அழைத்திருக்கிறீர்கள் 
    அதற்கு 1 போன்ற நிலை வாதம்(கள்) தேவைப்படும்.
    `A.f` என்பதை வரையறுக்கும்போது `self` என்பதை மறந்துவிட்டீர்கள்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `480` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       476|     def f(x):
       477|         pass
       478| 
       479| try:
    -->480|     A().f(1)
                ^^^^^^^^
       481| except TypeError as e:

            A:  <class A>
                defined in <function test_type_error.test_Too_many_positional_argument>
        


Tuple no item assignment
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 446, in test_Tuple_no_item_assignment
        a[0] = 0
    TypeError: 'tuple' object does not support item assignment
    
        பட்டியலைப் பயன்படுத்த விரும்புகிறீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    பைத்தானில், சில பொருள்கள் மாறாதவை என்று அறியப்படுகின்றன: 
    ஒருமுறை வரையறுக்கப்பட்டால், அவற்றின் மதிப்பை மாற்ற முடியாது. 
    அத்தகைய ஒரு மாறாத பொருளின் பகுதியை மாற்ற முயற்சித்தீர்கள்: ஒரு `மடங்கு`, 
    பெரும்பாலும் அட்டவணைப்படுத்தல் செயல்பாட்டைப் பயன்படுத்தி.
    அதற்குப் பதிலாகப் பட்டியலைப் பயன்படுத்த நினைத்திருக்கலாம்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `446` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       443| def test_Tuple_no_item_assignment():
       444|     a = (1, 2, 3)
       445|     try:
    -->446|         a[0] = 0
                    ^^^^
       447|     except TypeError as e:

            a:  (1, 2, 3)
            a[0]:  1
        


Unhachable type
~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 769, in test_Unhachable_type
        {[1, 2]: 1}
    TypeError: unhashable type: 'list'
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    புலபடகூடிய பொருட்களை மட்டுமே `தொகுப்பு` இன் உறுப்புகளாக 
    அல்லது `அகராதி` இன் திறவுகோல்களாகப் பயன்படுத்த முடியும். 
    புலபடகூடிய பொருள்கள், அவை உருவாக்கப்பட்டவுடன் 
    மதிப்பை மாற்றாத பொருள்கள்.ஒரு `பட்டியல்` ஐப் பயன்படுத்துவதற்குப் பதிலாக, ஒரு `மடங்கு` ஐப் பயன்படுத்தவும்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `769` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       767| def test_Unhachable_type():
       768|     try:
    -->769|         {[1, 2]: 1}
       770|     except TypeError as e:


Unsupported operand types
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 325, in test_Unsupported_operand_types
        a @= b
    TypeError: unsupported operand type(s) for @=: 'str' and 'int'
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    பொருந்தாத இரண்டு வகையான பொருட்களைப் பயன்படுத்தி இயக்கியை 
    @= பயன்படுத்த முயற்சித்தீர்கள்:
    ஒரு சரம் (`str`) மற்றும் ஒரு முழுஎண் (`int`).
    இந்த இயக்கி பொதுவாக அணிகளை பெருக்க மட்டுமே 
    பயன்படுத்தப்படுகிறது.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `325` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       322| try:
       323|     a = "a"
       324|     b = 2
    -->325|     a @= b
       326| except TypeError as e:

            a:  'a'
            b:  2
        


divmod
~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 69, in test_divmod
        result = divmod(a, b)
    TypeError: unsupported operand type(s) for divmod(): 'int' and 'complex'
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    The arguments of `divmod` must be integers (`int`) or real (`float`) numbers.
    At least one of the arguments was a complex number.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `69` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       66| a = 2
       67| b = 3 + 2j
       68| try:
    -->69|     result = divmod(a, b)
                        ^^^^^^^^^^^^
       70| except TypeError as e:

            a:  2
            b:  (3+2j)
            divmod:  <builtin function divmod>
        


function got multiple argument
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 996, in test_function_got_multiple_argument
        fn2(0, a=1)
    TypeError: test_function_got_multiple_argument.<locals>.fn2() got multiple values for argument 'a'
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    `fn2` என்ற செயல்பாட்டை அழைக்கும் போது
    வாதத்தின் மதிப்பை `a` ஒன்றுக்கு மேற்பட்ட முறை குறிப்பிட்டுள்ளீர்கள்.
    இந்தச் செயல்பாட்டு பின்வரும் வாதங்களைக் கொண்டுள்ளது: 
    `a, b=1`
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `996` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       992| def fn2(a, b=1):
       993|     pass
       994| 
       995| try:
    -->996|     fn2(0, a=1)
                ^^^^^^^^^^^
       997| except TypeError as e:

            fn2:  <function fn2>
                defined in <function test_function_got_multiple_argument>
        


function has no len
~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 919, in test_function_has_no_len
        len(bad)
    TypeError: object of type 'function' has no len()
    
        `bad` என்பதை அழைக்க மறந்துவிட்டீர்களா?
        
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    `bad` என்பதை அழைக்க, அடைப்புக்குறிகளைச் சேர்க்க மறந்துவிட்டீர்கள் என்று சந்தேகிக்கிறேன். 
    நீங்கள் இவ்வாறு எழுத நினைத்திருக்கலாம்: 
    `len(bad())`
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `919` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       915| def bad():
       916|     pass
       917| 
       918| try:
    -->919|     len(bad)
                ^^^^^^^^
       920| except TypeError as e:

            bad:  <function bad> defined in <function test_function_has_no_len>
            len:  <builtin function len>
        


getattr attribute name must be string
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 1044, in test_getattr_attribute_name_must_be_string
        getattr("__repr__", 1)  # as reported in issue #77
    TypeError: getattr(): attribute name must be string
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    `getattr()` செயல்பாட்டின் இரண்டாவது வாதம் ஒரு சரமாக இருக்க வேண்டும்.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `1044` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       1037| if friendly_traceback.get_lang() == "en":
       1038|     assert (
       1039|         "The second argument of the function `hasattr()` must be a string."
       1040|         in result
       1041|     )
       1042| 
       1043| try:
    -->1044|     getattr("__repr__", 1)  # as reported in issue #77
                 ^^^^^^^^^^^^^^^^^^^^^^
       1045| except TypeError as e:

            getattr:  <builtin function getattr>
        


method got multiple argument
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 1016, in test_method_got_multiple_argument
        t.some_method(0, a=1)
    TypeError: test_method_got_multiple_argument.<locals>.T.some_method() got multiple values for argument 'a'
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    `t.some_method` என்ற செயல்பாட்டை அழைக்கும் போது
    வாதத்தின் மதிப்பை `a` ஒன்றுக்கு மேற்பட்ட முறை குறிப்பிட்டுள்ளீர்கள்.
    இந்தச் செயல்பாட்டிற்கு ஒரே ஒரு வாதம் உள்ளது: `a`
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `1016` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       1012|         pass
       1013| 
       1014| t = T()
       1015| try:
    -->1016|     t.some_method(0, a=1)
                 ^^^^^^^^^^^^^^^^^^^^^
       1017| except TypeError as e:

            t:  <T object>
                defined in <function test_type_error.test_method_got_multiple_argument>
            t.some_method:  <bound method T.some_method>
                of <T object>
                defined in <function test_type_error.test_method_got_multiple_argument>
        


vars arg must have dict
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_type_error.py", line 964, in test_vars_arg_must_have_dict
        vars(f)
    TypeError: vars() argument must have __dict__ attribute
    
    ஒரு வகைப்பிழை `TypeError` என்பது பொதுவாக பொருந்தாத இரண்டு
    வகையான பொருள்களை இணைக்க முயற்சிப்பதாலோ, ஒரு செயல்பாட்டை
    தவறான வகைப் பொருளுடன் அழைப்பதாலோ அல்லது கொடுக்கப்பட்ட
    வகைப் பொருளில் அனுமதிக்கப்படாத செயலைச் செய்ய முயற்சிப்பதாலோ ஏற்படுகிறது.
    
    ஒரு பொருளின் `__dict__` பண்புக்கூறின் உள்ளடக்கத்தை பட்டியலிட 
    `vars` செயல்பாடு பயன்படுத்தப்படுகிறது.
    பொருள் `f` `__dict__` என்பதற்குப் பதிலாக `__slots__` ஐப் பயன்படுத்துகிறது.
    
    'TESTS:\runtime\test_type_error.py' கோப்பின் `964` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       960|     assert no_slots not in result
       961|     assert use_slots not in result
       962| 
       963| try:
    -->964|     vars(f)
                ^^^^^^^
       965| except TypeError as e:

            f:  <F object>
                defined in <function test_type_error.test_vars_arg_must_have_dict>
            vars:  <builtin function vars>
        


UnboundLocalError
-----------------


Missing both
~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_unbound_local_error.py", line 65, in test_Missing_both
        outer_missing_both()
      File "TESTS:\runtime\test_unbound_local_error.py", line 22, in outer_missing_both
        inner()
      File "TESTS:\runtime\test_unbound_local_error.py", line 21, in inner
        spam_missing_both += 1
    UnboundLocalError: local variable 'spam_missing_both' referenced before assignment
    
        `global spam_missing_both` அல்லது `nonlocal spam_missing_both` ஒன்றைச் சேர்க்க 
        மறந்துவிட்டீர்களா?
        
    பைத்தானில், ஒரு செயல்பாட்டிற்குள் பயன்படுத்தப்படும் மாறிகள் உள்ளூர் மாறிகள் எனப்படும்.
    அவற்றைப் பயன்படுத்துவதற்கு முன், அவற்றிற்கு ஒரு மதிப்பு ஒதுக்கப்பட வேண்டும்.
    ஒரு மதிப்பு ஒதுக்கப்படுவதற்கு முன் பயன்படுத்தப்படும் ஒரு மாறி கருதப்படுகிறது
    அந்த செயல்பாட்டிற்கு வெளியே வரையறுக்கப்பட வேண்டும்;
    இது ஒரு உலகளாவிய `global` (அல்லது சில நேரங்களில் உள்ளூர்அல்லாத `nonlocal`) மாறி என அறியப்படுகிறது.
    இது ஒரு உலகளாவிய மாறி என்பதை பைத்தானுக்கு முதலில் குறிப்பிடாமல் ஒரு செயல்பாட்டிற்குள் அத்தகைய உலகளாவிய மாறிக்கு நீங்கள் மதிப்பை ஒதுக்க முடியாது, 
    இல்லையெனில் நீங்கள் பார்ப்பீர்கள்
    ஒரு வரம்பற்றஉள்ளூர்பிழை `UnboundLocalError`.
    
    பைத்தானால் அடையாளம் காணப்பட்ட `spam_missing_both` என்ற பெயரைப் பயன்படுத்த முயல்கிறீர்கள், 
    அதற்கு மதிப்பை வழங்குவதற்கு முன், செயல்பாட்டின் உள்ளூர் நோக்கத்தில் உள்ளது.
    
    `spam_missing_both` என்ற பெயர் உலகளாவிய மற்றும் உள்ளூர்அல்லாத இரண்டிலும் உள்ளது. 
    இது மிகவும் குழப்பமானதாக இருக்கலாம் மற்றும் பரிந்துரைக்கப்படவில்லை. 
    நீங்கள் எந்த மாறியைப் பார்க்க விரும்புகிறீர்கள் என்பதைப் பொறுத்து, உங்கள் செயல்பாட்டிற்குள் முதல் வரியாக 
    
       global spam_missing_both 
    
    அல்லது
    
       nonlocal spam_missing_both 
    
    ஐச் சேர்க்க வேண்டும்.
    
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `65` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       63| def test_Missing_both():
       64|     try:
    -->65|         outer_missing_both()
                   ^^^^^^^^^^^^^^^^^^^^
       66|     except UnboundLocalError as e:

            global outer_missing_both:  <function outer_missing_both>
        
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `21` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       20| def inner():
    -->21|     spam_missing_both += 1

            global spam_missing_both:  1
        


Missing global
~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_unbound_local_error.py", line 27, in test_Missing_global
        outer_missing_global()
      File "TESTS:\runtime\test_unbound_local_error.py", line 10, in outer_missing_global
        inner()
      File "TESTS:\runtime\test_unbound_local_error.py", line 9, in inner
        spam_missing_global += 1
    UnboundLocalError: local variable 'spam_missing_global' referenced before assignment
    
        `global spam_missing_global` சேர்க்க மறந்துவிட்டீர்களா?
        
    பைத்தானில், ஒரு செயல்பாட்டிற்குள் பயன்படுத்தப்படும் மாறிகள் உள்ளூர் மாறிகள் எனப்படும்.
    அவற்றைப் பயன்படுத்துவதற்கு முன், அவற்றிற்கு ஒரு மதிப்பு ஒதுக்கப்பட வேண்டும்.
    ஒரு மதிப்பு ஒதுக்கப்படுவதற்கு முன் பயன்படுத்தப்படும் ஒரு மாறி கருதப்படுகிறது
    அந்த செயல்பாட்டிற்கு வெளியே வரையறுக்கப்பட வேண்டும்;
    இது ஒரு உலகளாவிய `global` (அல்லது சில நேரங்களில் உள்ளூர்அல்லாத `nonlocal`) மாறி என அறியப்படுகிறது.
    இது ஒரு உலகளாவிய மாறி என்பதை பைத்தானுக்கு முதலில் குறிப்பிடாமல் ஒரு செயல்பாட்டிற்குள் அத்தகைய உலகளாவிய மாறிக்கு நீங்கள் மதிப்பை ஒதுக்க முடியாது, 
    இல்லையெனில் நீங்கள் பார்ப்பீர்கள்
    ஒரு வரம்பற்றஉள்ளூர்பிழை `UnboundLocalError`.
    
    பைத்தானால் அடையாளம் காணப்பட்ட `spam_missing_global` என்ற பெயரைப் பயன்படுத்த முயல்கிறீர்கள், 
    அதற்கு மதிப்பை வழங்குவதற்கு முன், செயல்பாட்டின் உள்ளூர் நோக்கத்தில் உள்ளது.
    
    `spam_missing_global` என்ற பெயர் global நோக்கத்தில் உள்ளது.
    ஒருவேளை 
    
       global spam_missing_global 
    
    என்ற கூற்று உங்கள் செயல்பாட்டிற்குள் முதல் வரியாக சேர்க்கப்பட்டிருக்க வேண்டும்.
    
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `27` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       25| def test_Missing_global():
       26|     try:
    -->27|         outer_missing_global()
                   ^^^^^^^^^^^^^^^^^^^^^^
       28|     except UnboundLocalError as e:

            global outer_missing_global:  <function outer_missing_global>
        
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `9` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       8| def inner():
    -->9|     spam_missing_global += 1

            global spam_missing_global:  1
        


Missing nonlocal
~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_unbound_local_error.py", line 46, in test_Missing_nonlocal
        outer_missing_nonlocal()
      File "TESTS:\runtime\test_unbound_local_error.py", line 16, in outer_missing_nonlocal
        inner()
      File "TESTS:\runtime\test_unbound_local_error.py", line 15, in inner
        spam_missing_nonlocal += 1
    UnboundLocalError: local variable 'spam_missing_nonlocal' referenced before assignment
    
        `nonlocal spam_missing_nonlocal` சேர்க்க மறந்துவிட்டீர்களா?
        
    பைத்தானில், ஒரு செயல்பாட்டிற்குள் பயன்படுத்தப்படும் மாறிகள் உள்ளூர் மாறிகள் எனப்படும்.
    அவற்றைப் பயன்படுத்துவதற்கு முன், அவற்றிற்கு ஒரு மதிப்பு ஒதுக்கப்பட வேண்டும்.
    ஒரு மதிப்பு ஒதுக்கப்படுவதற்கு முன் பயன்படுத்தப்படும் ஒரு மாறி கருதப்படுகிறது
    அந்த செயல்பாட்டிற்கு வெளியே வரையறுக்கப்பட வேண்டும்;
    இது ஒரு உலகளாவிய `global` (அல்லது சில நேரங்களில் உள்ளூர்அல்லாத `nonlocal`) மாறி என அறியப்படுகிறது.
    இது ஒரு உலகளாவிய மாறி என்பதை பைத்தானுக்கு முதலில் குறிப்பிடாமல் ஒரு செயல்பாட்டிற்குள் அத்தகைய உலகளாவிய மாறிக்கு நீங்கள் மதிப்பை ஒதுக்க முடியாது, 
    இல்லையெனில் நீங்கள் பார்ப்பீர்கள்
    ஒரு வரம்பற்றஉள்ளூர்பிழை `UnboundLocalError`.
    
    பைத்தானால் அடையாளம் காணப்பட்ட `spam_missing_nonlocal` என்ற பெயரைப் பயன்படுத்த முயல்கிறீர்கள், 
    அதற்கு மதிப்பை வழங்குவதற்கு முன், செயல்பாட்டின் உள்ளூர் நோக்கத்தில் உள்ளது.
    
    `spam_missing_nonlocal` என்ற பெயர் nonlocal நோக்கத்தில் உள்ளது.
    ஒருவேளை 
    
       nonlocal spam_missing_nonlocal 
    
    என்ற கூற்று உங்கள் செயல்பாட்டிற்குள் முதல் வரியாக சேர்க்கப்பட்டிருக்க வேண்டும்.
    
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `46` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       44| def test_Missing_nonlocal():
       45|     try:
    -->46|         outer_missing_nonlocal()
                   ^^^^^^^^^^^^^^^^^^^^^^^^
       47|     except UnboundLocalError as e:

            global outer_missing_nonlocal:  <function outer_missing_nonlocal>
        
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `15` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       14| def inner():
    -->15|     spam_missing_nonlocal += 1


Typo in local
~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_unbound_local_error.py", line 104, in test_Typo_in_local
        test2()
      File "TESTS:\runtime\test_unbound_local_error.py", line 101, in test2
        alpha3 += 1
    UnboundLocalError: local variable 'alpha3' referenced before assignment
    
        `alpha1` எனக் குறிப்பிடுகிறீர்களா?
        
    பைத்தானில், ஒரு செயல்பாட்டிற்குள் பயன்படுத்தப்படும் மாறிகள் உள்ளூர் மாறிகள் எனப்படும்.
    அவற்றைப் பயன்படுத்துவதற்கு முன், அவற்றிற்கு ஒரு மதிப்பு ஒதுக்கப்பட வேண்டும்.
    ஒரு மதிப்பு ஒதுக்கப்படுவதற்கு முன் பயன்படுத்தப்படும் ஒரு மாறி கருதப்படுகிறது
    அந்த செயல்பாட்டிற்கு வெளியே வரையறுக்கப்பட வேண்டும்;
    இது ஒரு உலகளாவிய `global` (அல்லது சில நேரங்களில் உள்ளூர்அல்லாத `nonlocal`) மாறி என அறியப்படுகிறது.
    இது ஒரு உலகளாவிய மாறி என்பதை பைத்தானுக்கு முதலில் குறிப்பிடாமல் ஒரு செயல்பாட்டிற்குள் அத்தகைய உலகளாவிய மாறிக்கு நீங்கள் மதிப்பை ஒதுக்க முடியாது, 
    இல்லையெனில் நீங்கள் பார்ப்பீர்கள்
    ஒரு வரம்பற்றஉள்ளூர்பிழை `UnboundLocalError`.
    
    `alpha3` என்று எழுதுவதற்குப் பதிலாக, நீங்கள் பின்வருவனவற்றில் ஒன்றைக் குறிப்பிட்டிருக்கலாம்:
    *   உள்ளூர் நோக்கம்: `alpha1`, `alpha2`
    
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `104` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       100|     alpha2 = 1
       101|     alpha3 += 1
       102| 
       103| try:
    -->104|     test2()
                ^^^^^^^
       105| except UnboundLocalError as e:

            test2:  <function test2> defined in <function test_Typo_in_local>
        
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `101` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
        98| def test2():
        99|     alpha1 = 1
       100|     alpha2 = 1
    -->101|     alpha3 += 1


Using name of builtin
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_unbound_local_error.py", line 125, in test_Using_name_of_builtin
        dist([])
      File "TESTS:\runtime\test_unbound_local_error.py", line 121, in dist
        max = max(points)
    UnboundLocalError: local variable 'max' referenced before assignment
    
    பைத்தானில், ஒரு செயல்பாட்டிற்குள் பயன்படுத்தப்படும் மாறிகள் உள்ளூர் மாறிகள் எனப்படும்.
    அவற்றைப் பயன்படுத்துவதற்கு முன், அவற்றிற்கு ஒரு மதிப்பு ஒதுக்கப்பட வேண்டும்.
    ஒரு மதிப்பு ஒதுக்கப்படுவதற்கு முன் பயன்படுத்தப்படும் ஒரு மாறி கருதப்படுகிறது
    அந்த செயல்பாட்டிற்கு வெளியே வரையறுக்கப்பட வேண்டும்;
    இது ஒரு உலகளாவிய `global` (அல்லது சில நேரங்களில் உள்ளூர்அல்லாத `nonlocal`) மாறி என அறியப்படுகிறது.
    இது ஒரு உலகளாவிய மாறி என்பதை பைத்தானுக்கு முதலில் குறிப்பிடாமல் ஒரு செயல்பாட்டிற்குள் அத்தகைய உலகளாவிய மாறிக்கு நீங்கள் மதிப்பை ஒதுக்க முடியாது, 
    இல்லையெனில் நீங்கள் பார்ப்பீர்கள்
    ஒரு வரம்பற்றஉள்ளூர்பிழை `UnboundLocalError`.
    
    `max` என்பது பைதான் உள்ளமைக்கப்பட்ட செயல்பாடு.
    செயல்பாட்டில் அதன் அசல் பொருளைப் பயன்படுத்தும் போது, ஒரு 
    செயல்பாட்டிற்குள் `max` க்கு மதிப்பை ஒதுக்க முயற்சித்தீர்கள்.
    
    பைதான் உள்ளமைக்கப்பட்ட செயல்பாட்டின் அதே பெயரை உள்ளூர் மாறிக்கு 
    வழங்குவது பொதுவாக நல்ல யோசனையல்ல என்பதை நினைவில் கொள்க (`max` போன்றவை).
    
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `125` ஆம் வரியில் செயல்படுத்தல் நிறுத்தப்பட்டது.
    
       122|     min = min(points)
       123|     return max - min
       124| try:
    -->125|     dist([])
                ^^^^^^^^
       126| except UnboundLocalError as e:

            dist:  <function dist> defined in <function test_Using_name_of_builtin>
        
    'TESTS:\runtime\test_unbound_local_error.py' கோப்பின் `121` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       120| def dist(points):
    -->121|     max = max(points)
                      ^^^
       122|     min = min(points)

            max:  <builtin function max>
        


UnknownError
------------


Generic
~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_unknown_error.py", line 24, in test_Generic
        raise UnknownException("Some informative message about an unknown exception.")
    UnknownException: Some informative message about an unknown exception.
    
    `UnknownException` வகை விதிவிலக்கு என்பது `Exception` இன் துணைப்பிரிவாகும்.
    Nothing more specific is known about `UnknownException`.
    
    All built-in exceptions defined by Python are derived from `Exception`.
    All user-defined exceptions should also be derived from this class.
    
    'TESTS:\runtime\test_unknown_error.py' கோப்பின் `24` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       20| result = friendly_traceback.get_output()
       21| assert "UnknownException -> Exception" in result
       22| 
       23| try:
    -->24|     raise UnknownException("Some informative message about an unknown exception.")
       25| except Exception as e:

            global UnknownException:  <class test_unknown_error.UnknownException>
        


ValueError
----------


Convert to int
~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 194, in test_Convert_to_int
        int('13a')
    ValueError: invalid literal for int() with base 10: '13a'
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    `'13a'` என்பது அடிப்படை `10` இல் உள்ள `int()` க்கான தவறான மதிப்புரு.
    அடிப்படை `10` இல், `int()` என்பது `0` லிருந்து `9` இலக்கங்களைக் 
    கொண்ட சரத்தை முழு எண்ணாக மாற்றப் பயன்படுத்தப்படுகிறது.
    பின்வரும் எழுத்துகள் அனுமதிக்கப்படாது: `a`.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `194` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       190| if english:
       191|     assert "needs to be first converted using `float()`" in result
       192| 
       193| try:
    -->194|     int('13a')
                ^^^^^^^^^^
       195| except ValueError as e:

            int:  <class int>
        


Could not convert to float
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 92, in test_Could_not_convert_to_float
        float("42b")
    ValueError: could not convert string to float: '42b'
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    The string `42b` cannot be converted to a `float`
    as it does not represent a number.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `92` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       90| def test_Could_not_convert_to_float():
       91|     try:
    -->92|         float("42b")
                   ^^^^^^^^^^^^
       93|     except ValueError as e:

            float:  <class float>
        


Date invalid month
~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 60, in test_Date_invalid_month
        d = date(2021, 13, 1)
    ValueError: month must be in 1..12
    
        செல்லாத மாதத்தைக் குறிப்பிட்டீர்களா?
        
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    `தேதி` பொருளில் ஒரு மாதத்திற்கான தவறான மதிப்பை நீங்கள் குறிப்பிடுகிறீர்கள் என்று நினைக்கிறேன். 
    சரியான மதிப்புகள் 1 முதல் 12 வரையிலான முழு எண்களாகும்.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `60` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       57| def test_Date_invalid_month():
       58|     from datetime import date
       59|     try:
    -->60|         d = date(2021, 13, 1)
                       ^^^^^^^^^^^^^^^^^
       61|     except ValueError as e:

            date:  <class datetime.date>
        


Not enough values to unpack
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 28, in test_Not_enough_values_to_unpack
        a, b, c = d
    ValueError: not enough values to unpack (expected 3, got 2)
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    கட்டவிழ் என்பது, மறுசெய்யக்கூடிய ஒவ்வொரு பொருளுக்கும் 
    ஒரு பெயரை ஒதுக்க ஒரு வசதியான வழியாகும்.
    இந்த நிகழ்வில், மறுசெய்யக்கூடிய நீளத்தை விட (3) 
    அதிக பெயர்கள் உள்ளன, ஒரு சரம் (`str`) நீளம் 2.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `28` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       24| assert "ValueError: not enough values to unpack (expected 3, got 2)" in result
       25| 
       26| d = "ab"
       27| try:
    -->28|     a, b, c = d
       29| except ValueError as e:

            d:  'ab'
        


Pow third arg cannot be zero
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 108, in test_Pow_third_arg_cannot_be_zero
        pow(2, 4, a)
    ValueError: pow() 3rd argument cannot be 0
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    `pow()` செயல்பாட்டின் மூன்றாவது வாதம் சுழியமாக இருக்க முடியாது.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `108` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       105| def test_Pow_third_arg_cannot_be_zero():
       106|     a = 0
       107|     try:
    -->108|         pow(2, 4, a)
                    ^^^^^^^^^^^^
       109|     except ValueError as e:

            a:  0
            pow:  <builtin function pow>
        


Slots conflicts with class variable
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 75, in test_Slots_conflicts_with_class_variable
        class F:
    ValueError: 'a' in __slots__ conflicts with class variable
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    `a` என்ற பெயர் வகுப்பு மாறியின் பெயராகவும், `__slots__` வகுப்பில் சரம் 
    உருப்படியாகவும் பயன்படுத்தப்படுகிறது; 
    இது அனுமதிக்கப்படவில்லை.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `75` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       73| def test_Slots_conflicts_with_class_variable():
       74|     try:
    -->75|         class F:
       76|             __slots__ = ["a", "b"]


Too many values to unpack
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 44, in test_Too_many_values_to_unpack
        a, b = c
    ValueError: too many values to unpack (expected 2)
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    கட்டவிழ் என்பது, மறுசெய்யக்கூடிய ஒவ்வொரு பொருளுக்கும் 
    ஒரு பெயரை ஒதுக்க ஒரு வசதியான வழியாகும்.
    இந்த நிகழ்வில், மறுசெய்யக்கூடிய நீளத்தை விட (2) 
    குறைவான பெயர்கள் உள்ளன, ஒரு `பட்டியல்` நீளம் 3.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `44` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       41| def test_Too_many_values_to_unpack():
       42|     c = [1, 2, 3]
       43|     try:
    -->44|         a, b = c
       45|     except ValueError as e:

            c:  [1, 2, 3]
        


int base not in range
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 209, in test_int_base_not_in_range
        int('18', base=37)
    ValueError: int() base must be >= 2 and <= 36, or 0
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    `int()` இன் வாதத்தின் `base` சுழியமாகவோ அல்லது 
    2 முதல் 36 வரையிலான முழு எண்ணாகவோ இருக்க வேண்டும்.
    அனுமதிக்கப்படாத 37 என்று எழுதியுள்ளீர்கள்.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `209` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       207| def test_int_base_not_in_range():
       208|     try:
    -->209|         int('18', base=37)
                    ^^^^^^^^^^^^^^^^^^
       210|     except ValueError as e:

            int:  <class int>
        


remove item not in list
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 236, in test_remove_item_not_in_list
        a_list.remove(b)
    ValueError: list.remove(x): x not in list
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    You have attempted to remove `b` from the list `a_list`.
    However, `a_list` does not contain `b`.
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `236` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       233| a_list = [1, 2, 3]
       234| b = 4
       235| try:
    -->236|     a_list.remove(b)
                ^^^^^^^^^^^^^^^^
       237| except ValueError as e:

            a_list:  [1, 2, 3]
            b:  4
            a_list.remove:  <builtin method remove of list object>
        


time strptime incorrect format
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_value_error.py", line 133, in test_time_strptime_incorrect_format
        time.strptime("2020-01-01", "%d %m %Y")
    ValueError: time data '2020-01-01' does not match format '%d %m %Y'
    
    ஒரு மதிப்புப்பிழை `ValueError` என்பது ஒரு செயல்பாடு அல்லது செயல்பாடு
    சரியான வகையின் வாதத்தைப் பெற்றது, ஆனால் ஒரு பொருத்தமற்ற மதிப்பைக் குறிக்கிறது.
    
    நேரத்திற்கு நீங்கள் கொடுத்த மதிப்பு நீங்கள் குறிப்பிட்ட வடிவத்தில் இல்லை.
    உருப்படிகளுக்கு இடையில் ஒரே பிரிப்பானைப் பயன்படுத்துவதை உறுதிசெய்து 
    (உதாரணமாக, நாள் மற்றும் மாதத்திற்கு இடையில்) மற்றும் வழங்கப்பட்ட தரவு 
    மற்றும் நீங்கள் குறிப்பிட்ட வடிவமைப்பு இரண்டிலும் வரிசையை ஒரே மாதிரியாக வைத்திருக்கவும்.
    பின்வரும் அட்டவணை பயனுள்ளதாக இருக்கும்:
    https://docs.python.org/3/library/time.html#time.strftime
    பின்வரும் தளமும் பயனுள்ளதாக இருக்கும்: https://www.strfti.me/
    
    'TESTS:\runtime\test_value_error.py' கோப்பின் `133` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       129|     return
       130| 
       131| import time
       132| try:
    -->133|     time.strptime("2020-01-01", "%d %m %Y")
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
       134| except ValueError as e:

            time:  <module time (builtin)>
            time.strptime:  <builtin function strptime>
        


ZeroDivisionError
-----------------


Complex division
~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 180, in test_Complex_division
        1 / zero
    ZeroDivisionError: complex division by zero
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    சுழியத்திற்குச் சமமான பின்வரும் பதம் 
    
        zero 
    
    மூலம் நீங்கள் வகுக்கிறீர்கள்.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `180` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       177| def test_Complex_division():
       178|     zero = 0j
       179|     try:
    -->180|         1 / zero
                    ^^^^^^^^
       181|     except ZeroDivisionError as e:

            zero:  0j
        


Division by zero literal
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 229, in test_Division_by_zero_literal
        1.0 / 0
    ZeroDivisionError: float division by zero
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    நீங்கள் சுழியத்தால் வகுக்கிறீர்கள்.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `229` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       225| if friendly_traceback.get_lang() == "en":
       226|     assert "Using the modulo operator, `%`, you are dividing by zero" in result
       227| 
       228| try:
    -->229|     1.0 / 0
                ^^^^^^^
       230| except ZeroDivisionError as e:


Division operator
~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 20, in test_Division_operator
        1 / zero
    ZeroDivisionError: division by zero
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    சுழியத்திற்குச் சமமான பின்வரும் பதம் 
    
        zero 
    
    மூலம் நீங்கள் வகுக்கிறீர்கள்.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `20` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       13| if friendly_traceback.get_lang() == "en":
       14|     assert (
       15|         "The following mathematical expression includes a division by zero"
       16|         in result
       17|     )
       18| 
       19| try:
    -->20|     1 / zero
               ^^^^^^^^
       21| except ZeroDivisionError as e:

            zero:  0
        


Divmod
~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 100, in test_Divmod
        divmod(1, zero)
    ZeroDivisionError: integer division or modulo by zero
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    `divmod()` செயல்பாட்டின் இரண்டாவது வாதம் சுழியமாகும்.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `100` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
        97| def test_Divmod():
        98|     zero = 0
        99|     try:
    -->100|         divmod(1, zero)
                    ^^^^^^^^^^^^^^^
       101|     except ZeroDivisionError as e:

            zero:  0
            divmod:  <builtin function divmod>
        


Float division
~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 148, in test_Float_division
        1 / zero
    ZeroDivisionError: float division by zero
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    சுழியத்திற்குச் சமமான பின்வரும் பதம் 
    
        zero 
    
    மூலம் நீங்கள் வகுக்கிறீர்கள்.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `148` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       145| def test_Float_division():
       146|     zero = 0.0
       147|     try:
    -->148|         1 / zero
                    ^^^^^^^^
       149|     except ZeroDivisionError as e:

            zero:  0.0
        


Float divmod
~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 164, in test_Float_divmod
        divmod(1, zero)
    ZeroDivisionError: float divmod()
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    `divmod()` செயல்பாட்டின் இரண்டாவது வாதம் சுழியத்திற்குச் சமம்.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `164` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       161| def test_Float_divmod():
       162|     zero = 0.0
       163|     try:
    -->164|         divmod(1, zero)
                    ^^^^^^^^^^^^^^^
       165|     except ZeroDivisionError as e:

            zero:  0.0
            divmod:  <builtin function divmod>
        


Float modulo
~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 132, in test_Float_modulo
        1 % zero
    ZeroDivisionError: float modulo
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    Using the modulo operator, `%`, you are dividing by the following term
    
         zero
    
    which is equal to zero.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `132` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       125|     assert (
       126|         "The following mathematical expression includes a division by zero"
       127|         in result
       128|     )
       129|     assert "done using the modulo operator" in result
       130| 
       131| try:
    -->132|     1 % zero
                ^^^^^^^^
       133| except ZeroDivisionError as e:

            zero:  0.0
        


Integer division operator
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 49, in test_Integer_division_operator
        1 // zero
    ZeroDivisionError: integer division or modulo by zero
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    சுழியத்திற்குச் சமமான பின்வரும் பதம் 
    
        zero 
    
    மூலம் நீங்கள் வகுக்கிறீர்கள்.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `49` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       42| if friendly_traceback.get_lang() == "en":
       43|     assert (
       44|         "The following mathematical expression includes a division by zero"
       45|         in result
       46|     )
       47| 
       48| try:
    -->49|     1 // zero
               ^^^^^^^^^
       50| except ZeroDivisionError as e:

            zero:  0
        


Mixed operations
~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 243, in test_Mixed_operations
        a = divmod(8, 1 // 2)
    ZeroDivisionError: integer division or modulo by zero
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    பின்வரும் கணித வெளிப்பாடு சுழியத்தால் வகுத்தல்:
    
       divmod(8, 1 // 2)
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `243` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       241| def test_Mixed_operations():
       242|     try:
    -->243|         a = divmod(8, 1 // 2)
                        ^^^^^^^^^^^^^^^^^
       244|     except ZeroDivisionError as e:

            divmod:  <builtin function divmod>
            1 // 2:  0
        


Modulo operator
~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 81, in test_Modulo_operator
        1 % zero
    ZeroDivisionError: integer division or modulo by zero
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    Using the modulo operator, `%`, you are dividing by the following term
    
         zero
    
    which is equal to zero.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `81` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       74| if friendly_traceback.get_lang() == "en":
       75|     assert (
       76|         "The following mathematical expression includes a division by zero"
       77|         in result
       78|     )
       79| 
       80| try:
    -->81|     1 % zero
               ^^^^^^^^
       82| except ZeroDivisionError as e:

            zero:  0
        


Raise zero negative power
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: none


    Traceback (most recent call last):
      File "TESTS:\runtime\test_zero_division_error.py", line 196, in test_Raise_zero_negative_power
        zero**-1
    ZeroDivisionError: 0.0 cannot be raised to a negative power
    
    ஒரு மதிப்பை சுழியத்தால் நேரடியாகவோ அல்லது வேறு சில கணிதச் 
    செயல்பாட்டைப் பயன்படுத்தியோ வகுக்க முயற்சிக்கும்போது சுழியவகுத்தல்பிழை `ZeroDivisionError` ஏற்படுகிறது.
    
    நீங்கள் எண் 0 ஐ எதிர்மறை சக்தியாக உயர்த்த முயற்சிக்கிறீர்கள், 
    இது சுழியத்தால் வகுக்கும் சமமானதாகும்.
    
    'TESTS:\runtime\test_zero_division_error.py' கோப்பின் `196` ஆம் வரியில் விதிவிலக்கு எழுப்பப்பட்டது.
    
       193| def test_Raise_zero_negative_power():
       194|     zero = 0
       195|     try:
    -->196|         zero**-1
                    ^^^^^^^^
       197|     except ZeroDivisionError as e:

            zero:  0
        

